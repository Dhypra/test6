{"ast":null,"code":"import { CModalBody } from '@coreui/vue';\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport parts from '@/views/dataParts.vue';\nimport { add } from 'date-fns';\nimport VueTreeselect from 'vue3-treeselect';\nimport 'vue3-treeselect/dist/vue3-treeselect.css';\nconst modal = ref(!1);\nconst ModalAddModule = ref(!1);\nconst moduleDelete = ref(!1);\nconst modalAddPart = ref(!1);\nconst del = ref(!1);\nexport default {\n  components: {\n    name: 'TappingModule',\n    VueTreeselect\n  },\n  data() {\n    return {\n      modal,\n      moduleDelete,\n      modalAddPart,\n      del,\n      module: [],\n      ModalAddModule,\n      selectedModuleType: 'All',\n      selectedExporter: 'All',\n      selectedDate: new Date(),\n      selectedPartFilter: null,\n      qtyTappingPart: 0,\n      numberTapping: 0,\n      checkQtyTappingPart: null,\n      part_no: '',\n      part_name: '',\n      unique_no: '',\n      qty_kanban: '',\n      qty_remain: '',\n      date_tapping: null,\n      date_overflow: null,\n      date_unpacking: null,\n      page: 0,\n      modalModule: [],\n      modalMod: 0,\n      editIndex: null,\n      editModal: {},\n      delModal: {},\n      listPart: 0\n    };\n  },\n  mounted() {\n    axios.get('http://localhost:5000/module').then(response => {\n      console.log(response.data.data);\n      this.module = response.data.data;\n      console.log(response.data.data.filter(module => module.exporter_name == 'TMC').length);\n    });\n    console.log(parts);\n  },\n  computed: {\n    filteredModule() {\n      return this.module.filter(module => {\n        const matchModuleType = this.selectedModuleType === 'All' || module.module_type === this.selectedModuleType;\n        console.log(this.selectedExporter);\n        const matchExporter = this.selectedExporter === 'All' || module.exporter_name === this.selectedExporter;\n        let mts = new Date(this.selectedDate);\n        let mtd = new Date(module.date_receive);\n        let mtn = new Date();\n        console.log(mtn);\n        const matchMonth = !this.selectedDate || mtd == mts;\n        this.page = 0;\n        return matchModuleType && matchExporter && matchMonth;\n      });\n    }\n  },\n  methods: {\n    getModuleStatus(module) {\n      console.log(module.parts);\n      const hasNullTapping = parts.some(part => part.date_tapping != null);\n      return hasNullTapping ? 'Module Tapping' : 'Module Unpacking';\n    },\n    handleModal(id) {\n      console.log(id);\n      console.log(this.module.filter(module => module._id == id)[0].module_no);\n      this.modalMod = this.module.filter(module => module._id == id)[0];\n      this.modalModule = this.module.filter(module => module._id == id)[0].parts;\n      this.modal = !modal.value;\n      this.edit = !1;\n      this.del = !1;\n    },\n    handleDelete(id) {\n      console.log(this.module.filter(module => module._id == id)[0]);\n      this.modalMod = [this.module.filter(module => module._id == id)[0]];\n      console.log(!moduleDelete.value);\n      this.moduleDelete = !moduleDelete.value;\n    },\n    handleDeleteConfirm(id) {\n      console.log(id);\n      axios.delete('http://localhost:5000/module/' + id).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      this.moduleDelete = !moduleDelete.value;\n    },\n    handleModalAddPartOf(num) {\n      this.partTypeOptions = num.parts.map(part => ({\n        id: part.unique_no,\n        label: part.unique_no\n      }));\n      this.modalAddPart = !modalAddPart.value;\n    },\n    handleDel(num) {\n      this.del = !del.value;\n      console.log(this.modalModule[num]);\n      this.delModal = this.modalModule[num];\n    },\n    prevPage() {\n      if (this.page > 3) {\n        this.page = this.page - 4;\n      } else {}\n    },\n    nextPage() {\n      if (this.page < this.module.length - 4) {\n        this.page = this.page + 4;\n        console.log('add');\n      } else {}\n    },\n    editItem(index) {\n      this.editIndex = index;\n    },\n    saveEdit(index) {\n      this.editIndex = null;\n      console.log('Saved:', this.modalModule[index]);\n    },\n    addList() {\n      this.listPart = this.listPart + 1;\n      console.log(this.listPart);\n    },\n    handleModalAddPart(modalMod) {\n      console.log(modalMod);\n      const newParts = modalMod.parts.map(item => ({\n        part_no: item.part_no,\n        part_name: item.part_name,\n        unique_no: item.unique_no,\n        qty_kanban: item.qty_kanban,\n        qty_remain: item.qty_remain,\n        date_tapping: item.date_tapping,\n        date_overflow: item.date_overflow,\n        date_unpacking: item.date_unpacking\n      }));\n      let newPart = {\n        part_no: this.part_no,\n        part_name: this.part_name,\n        unique_no: this.unique_no,\n        qty_kanban: this.qty_kanban,\n        qty_remain: this.qty_remain,\n        date_tapping: this.date_tapping,\n        date_overflow: this.date_overflow,\n        date_unpacking: this.date_unpacking\n      };\n      console.log(newParts);\n      let newModal = [...newParts, newPart];\n      console.log(newModal);\n      let newModule = {\n        module_type: modalMod.module_type,\n        exporter_name: modalMod.exporter_name,\n        module_no: modalMod.module_no,\n        module_note: modalMod.module_note,\n        date_receive: modalMod.date_receive,\n        parts: newModal\n      };\n      console.log(newModule);\n      console.log('http://localhost:5000/module/' + modalMod._id);\n      axios.put('http://localhost:5000/module/' + modalMod._id, newModule).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    handleModalAddModule() {\n      console.log(parts);\n      this.ModalAddModule = !ModalAddModule.value;\n    },\n    checkTappingPart(num) {\n      this.numberTapping = this.qtyTappingPart;\n      if (this.qtyTappingPart == 0) {\n        this.checkQtyTappingPart = 'belum';\n      } else if (this.qtyTappingPart <= num && this.qtyTappingPart > 0) {\n        this.checkQtyTappingPart = 'benar';\n      } else if (this.qtyTappingPart > num || this.qtyTappingPart < 0) {\n        this.checkQtyTappingPart = 'salah';\n      }\n    }\n  }\n};","map":{"version":3,"names":["CModalBody","axios","ref","parts","add","VueTreeselect","modal","ModalAddModule","moduleDelete","modalAddPart","del","components","name","data","module","selectedModuleType","selectedExporter","selectedDate","Date","selectedPartFilter","qtyTappingPart","numberTapping","checkQtyTappingPart","part_no","part_name","unique_no","qty_kanban","qty_remain","date_tapping","date_overflow","date_unpacking","page","modalModule","modalMod","editIndex","editModal","delModal","listPart","mounted","get","then","response","console","log","filter","exporter_name","length","computed","filteredModule","matchModuleType","module_type","matchExporter","mts","mtd","date_receive","mtn","matchMonth","methods","getModuleStatus","hasNullTapping","some","part","handleModal","id","_id","module_no","value","edit","handleDelete","handleDeleteConfirm","delete","catch","error","handleModalAddPartOf","num","partTypeOptions","map","label","handleDel","prevPage","nextPage","editItem","index","saveEdit","addList","handleModalAddPart","newParts","item","newPart","newModal","newModule","module_note","put","handleModalAddModule","checkTappingPart"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\15\\FE\\src\\views\\Unpacking.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"bg head-module\">\r\n      <div\r\n        class=\"head-module\"\r\n        style=\"font-size: 1.5rem; background-color: gray\"\r\n      >\r\n        Information<button\r\n          type=\"button\"\r\n          class=\"btn btn-success\"\r\n          @click=\"handleModalAddModule()\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n      <div class=\"row m-1 mb-2\">\r\n        <!--!Filter -->\r\n        <div class=\"data-uploaded mb-3 p-0\">\r\n          <div class=\"filter-section\">\r\n            <label for=\"filter-date\">Production Date</label\r\n            ><input v-model=\"selectedDate\" type=\"date\" id=\"filter-unique\" />\r\n          </div>\r\n          <div class=\"filter-section\">\r\n            <label for=\"filter-date\">Shift</label\r\n            ><select v-model=\"selectedShift\" name=\"module\" id=\"module\">\r\n              <option value=\"All\">All</option>\r\n              <option value=\"Day Shift\">Day Shift</option>\r\n              <option value=\"Night Shift\">Night Shift</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"filter-section\">\r\n            <label for=\"filter-date\">Group</label\r\n            ><select v-model=\"selectedGroup\" name=\"module\" id=\"module\">\r\n              <option value=\"All\">All</option>\r\n              <option value=\"Red\">Red</option>\r\n              <option value=\"White\">White</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <!--!Card Label -->\r\n        <div class=\"col-4\">\r\n          <div style=\"overflow: hidden; border-radius: 5px\">\r\n            <div class=\"row mdl\">\r\n              <h1 class=\"card-title col-6 col-module bg-info m-0 pt-2\">\r\n                Module Unpacking\r\n              </h1>\r\n              <h1 class=\"card-text col-6 text-center fz1 bg-light\">\r\n                {{\r\n                  module.filter((module) =>\r\n                    module.parts.some((part) => part.date_tapping === null),\r\n                  ).length -\r\n                  module.filter((module) =>\r\n                    module.parts.some((part) => part.date_tapping !== null),\r\n                  ).length\r\n                }}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <div style=\"overflow: hidden; border-radius: 5px\">\r\n            <div class=\"row mdl\">\r\n              <h1 class=\"card-title col-6 col-module bg-info m-0 pt-2\">\r\n                Module Tapping\r\n              </h1>\r\n              <h1 class=\"card-text col-6 text-center fz1 bg-light\">\r\n                {{\r\n                  module.filter((module) =>\r\n                    module.parts.some((part) => part.date_tapping !== null),\r\n                  ).length\r\n                }}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <div style=\"overflow: hidden; border-radius: 5px\">\r\n            <div class=\"row mdl\">\r\n              <h1 class=\"card-title col-6 col-module bg-info m-0 pt-2\">\r\n                O/F Tapping\r\n              </h1>\r\n              <h1 class=\"card-text col-6 text-center fz1 bg-light\">\r\n             {{   console.log(module.filter((module)=>module.exporter_name == 'TMC&STM'||module.exporter_name == 'UMWT&TMV').length)}}\r\n{{module.filter((module)=>module.exporter_name == 'TMC&STM'||module.exporter_name == 'UMWT&TMV').length}}\r\n               </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!--!Table Module -->\r\n  <div class=\"bg head-module mt-2\">\r\n    <div class=\"head-module\" style=\"font-size: 1.5rem; background-color: gray\">\r\n      Data Unpacking\r\n    </div>\r\n    <table class=\"data-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>No</th>\r\n          <th>Module Type</th>\r\n          <th>Module process</th>\r\n          <th>Exp Name</th>\r\n          <th>Module No.</th>\r\n          <th>Module Type</th>\r\n          <th>Date Receive</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <!--!List Module -->\r\n      <tbody\r\n        v-for=\"(module, index) in module.slice(page, page + 4)\"\r\n        :key=\"index\"\r\n      >\r\n        <!--{{console.log(module)}}-->\r\n        <tr>\r\n          <td>{{ index + page + 1 }}</td>\r\n          <td>{{ module.module_type }}</td>\r\n          <td>{{ getModuleStatus(module.par) }}</td>\r\n          <td>{{ module.exporter_name }}</td>\r\n          <td>{{ module.module_no }}</td>\r\n          <td>{{ module.module_note }}</td>\r\n          <td>\r\n            {{\r\n              new Date(module.date_receive).toLocaleDateString(['ban', 'id'])\r\n            }}\r\n          </td>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-secondary\"\r\n              @click=\"handleModal(module._id)\"\r\n            >\r\n              Detail</button\r\n            ><button\r\n              type=\"button\"\r\n              class=\"btn btn-danger\"\r\n              @click=\"handleDelete(module._id)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <!--!Pagination --><CPagination\r\n      align=\"center\"\r\n      aria-label=\"Page navigation example\"\r\n      ><CPaginationItem @Click=\"prevPage()\">Previous</CPaginationItem\r\n      ><!--<CPaginationItem href=\"#\">1</CPaginationItem><CPaginationItem href=\"#\">2</CPaginationItem><CPaginationItem href=\"#\">3</CPaginationItem>--><CPaginationItem\r\n        @Click=\"nextPage()\"\r\n        >Next</CPaginationItem\r\n      ></CPagination\r\n    >\r\n  </div>\r\n  <!--!Modal Add Module --><CModal\r\n    size=\"xl\"\r\n    :visible=\"ModalAddModule\"\r\n    @close=\"\r\n      () => {\r\n        ModalAddModule = false\r\n      }\r\n    \"\r\n    ><CModalHeader\r\n      ><CModalTitle id=\"OptionalSizesExample1\"\r\n        >Add Module</CModalTitle\r\n      ></CModalHeader\r\n    ><CModalBody class=\"row\"\r\n      ><div class=\"col-3\">\r\n        <div class=\"form-wrapper form-price\">\r\n          <label for=\"\">Module Type</label\r\n          ><select v-model=\"selectedModuleType\" class=\"form-control\">\r\n            <option value=\"Route Delivery\" class=\"option\">\r\n              Route Delivery\r\n            </option>\r\n            <option value=\"Direct Delivery\" class=\"option\">\r\n              Direct Delivery\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-wrapper form-price\">\r\n          <label for=\"\">Exporter Name</label\r\n          ><select v-model=\"selectedExporterName\" class=\"form-control\">\r\n            <option value=\"TMC\" class=\"option\">TMC</option>\r\n            <option value=\"STM\" class=\"option\">STM</option>\r\n            <option value=\"UMWT\" class=\"option\">UMWT</option>\r\n            <option value=\"TMV\" class=\"option\">TMV</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-wrapper\">\r\n          <label for=\"filter-module-no\" class=\"label-input\">Module No</label\r\n          ><input type=\"text\" class=\"form-control\" v-model=\"selectedModuleNo\" />\r\n        </div>\r\n        <div class=\"form-wrapper\">\r\n          <label for=\"filter-module-note\" class=\"label-input\">Module Note</label\r\n          ><input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            v-model=\"selectedModuleNote\"\r\n          />\r\n        </div>\r\n        <div class=\"form-wrapper\">\r\n          <label for=\"filter-date-receive\" class=\"label-input\"\r\n            >Date Receive</label\r\n          ><input\r\n            type=\"date\"\r\n            class=\"form-control\"\r\n            v-model=\"selectedDateReceive\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-9\" style=\"border-left: black 1px solid\">\r\n        <table class=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>No</th>\r\n              <th>Part No</th>\r\n              <th>Part Name</th>\r\n              <th>Unique No</th>\r\n              <th>Qty Kanban</th>\r\n              <th>Qty Remain</th>\r\n              <th>Date Tapping</th>\r\n              <th>Date Overflow</th>\r\n              <th>Date Unpacking</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"part in listPart\">\r\n              <td>1</td>\r\n              <td>33411-52110-00</td>\r\n              <td>BRACKET,WIRING HARNESS CLAMP</td>\r\n              <td>T109</td>\r\n              <td><input type=\"number\" /></td>\r\n              <td><input type=\"number\" /></td>\r\n              <td><input type=\"date\" /></td>\r\n              <td><input type=\"date\" /></td>\r\n              <td><input type=\"date\" /></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button type=\"button\" class=\"btn btn-warning\" @click=\"addList()\">\r\n          Add List</button\r\n        ><button type=\"button\" class=\"btn btn-success\">Submit</button>\r\n      </div></CModalBody\r\n    ></CModal\r\n  ><!--!delete Module --><CModal\r\n    size=\"xl\"\r\n    :visible=\"moduleDelete\"\r\n    @close=\"\r\n      () => {\r\n        moduleDelete = false\r\n      }\r\n    \"\r\n    ><CModalBody style=\"font-size: 8rem; text-align: center\"\r\n      >R U Sure delete module{{\r\n        modalMod[0].module_no\r\n      }}?<br /><!--{{let id=modalMod[0]._id}}--><button\r\n        type=\"button\"\r\n        class=\"btn btn-danger\"\r\n        @click=\"handleDeleteConfirm(modalMod[0]._id)\"\r\n      >\r\n        Delete\r\n      </button></CModalBody\r\n    ></CModal\r\n  ><!--!Modal Add Part --><CModal\r\n    size=\"xl\"\r\n    :visible=\"modal\"\r\n    @close=\"\r\n      () => {\r\n        modal = false\r\n      }\r\n    \"\r\n    ><CModalHeader\r\n      ><CModalTitle id=\"OptionalSizesExample1\"\r\n        >Content List Module{{ modalMod.modal_no }}</CModalTitle\r\n      ></CModalHeader\r\n    ><CModalBody class=\"row\"\r\n      ><div class=\"col-2 text-center\">\r\n        <h3 class=\"m-0\">From Total</h3>\r\n        <br />\r\n        <h1 class=\"border border-dark\">\r\n          {{\r\n            modalMod.parts.reduce(\r\n              (sum, part) => sum + (part.qty_kanban || 0),\r\n              0,\r\n            )\r\n          }}\r\n        </h1>\r\n      </div>\r\n      <div class=\"col-2 text-center\">\r\n        <h3 class=\"m-0\">Sisa Box</h3>\r\n        <br />\r\n        <h1 class=\"border border-dark\">\r\n          <!-- {{ console.log(modalMod)}} -->\r\n          {{\r\n            modalMod.parts.reduce(\r\n              (sum, part) => sum + (part.qty_remain || 0),\r\n              0,\r\n            )\r\n          }}\r\n          <!--{{moduleModal[0].parts.reduce((sum,part)=>{return sum+(part.qty_remain||0)},0)}}-->\r\n        </h1>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success\"\r\n        @click=\"handleModalAddPartOf(modalMod)\"\r\n      >\r\n        Add\r\n      </button>\r\n      <div class=\"table-section\">\r\n        <table class=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>No</th>\r\n              <th>Module No</th>\r\n              <th>Part No</th>\r\n              <th>Part Name</th>\r\n              <th>Unique No</th>\r\n              <th>Qty Kanban</th>\r\n              <th>Qty Remain</th>\r\n              <th>Date Unpacking</th>\r\n              <th>Address</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              v-for=\"(module, index) in modalModule\"\r\n              :class=\"module.status !== 'overflow' ? 'bg-secondary' : ''\"\r\n            >\r\n              <td>{{ index + 1 }}</td>\r\n              <td>{{ modalMod.module_no }}</td>\r\n              <td>{{ module.part_no }}</td>\r\n              <td>{{ module.part_name }}</td>\r\n              <td>{{ module.unique_no }}</td>\r\n              <td>\r\n                <input\r\n                  v-if=\"editIndex === index\"\r\n                  v-model=\"module.qty_kanban\"\r\n                /><span v-else>{{ module.qty_kanban }}</span>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  v-if=\"editIndex === index\"\r\n                  v-model=\"module.qty_remain\"\r\n                /><span v-else>{{ module.qty_remain }}</span>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  v-if=\"editIndex === index\"\r\n                  v-model=\"module.date_unpacking\"\r\n                  type=\"date\"\r\n                /><span v-if=\"module.date_unpacking == null\">{{\r\n                  module.date_unpacking\r\n                }}</span\r\n                ><span v-else>{{\r\n                  new Date(module.date_unpacking).toLocaleDateString('id-ID')\r\n                }}</span>\r\n              </td>\r\n              <td>5</td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-warning\"\r\n                  @click=\"handleModalAddPart(index)\"\r\n                >\r\n                  Edit</button\r\n                ><button\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary\"\r\n                  @click=\"handleDel(index)\"\r\n                >\r\n                  Del\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <!--!edit page --><CModal\r\n              size=\"xl\"\r\n              :visible=\"modalAddPart\"\r\n              @close=\"\r\n                () => {\r\n                  modalAddPart = false\r\n                }\r\n              \"\r\n              ><CModalHeader\r\n                ><CModalTitle id=\"OptionalSizesExample1\"\r\n                  >Content List Module{{ modalMod.modal_no }}</CModalTitle\r\n                ></CModalHeader\r\n              ><CModalBody class=\"row\"\r\n                ><div class=\"filter-section\">\r\n                  <label for=\"filter-date\">Type Receive</label>\r\n                  <VueTreeselect\r\n                    v-model=\"selectedPartFilter\"\r\n                    :multiple=\"false\"\r\n                    :options=\"partTypeOptions\"\r\n                    placeholder=\"Select Part Type\"\r\n                  />\r\n                  {{ console.log(selectedPartFilter) }}\r\n                </div>\r\n                <table class=\"data-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>No</th>\r\n                      <th>Module No</th>\r\n                      <th>Part No</th>\r\n                      <th>Part Name</th>\r\n                      <th>Unique No</th>\r\n                      <th>Qty Kanban</th>\r\n                      <th>Qty Remain</th>\r\n                      <th>Latest Tapping</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr\r\n                      v-for=\"(module, index) in modalModule.filter(\r\n                        (part) => part.unique_no == selectedPartFilter,\r\n                      )\"\r\n                    >\r\n                      {{\r\n                        console.log(editModal)\r\n                      }}\r\n                      <td>{{ index + 1 }}</td>\r\n                      <td>{{ modalMod.module_no }}</td>\r\n                      <td>{{ module.part_no }}</td>\r\n                      <td>{{ module.part_name }}</td>\r\n                      <td>{{ module.unique_no }}</td>\r\n                      <td>{{ module.qty_kanban }}</td>\r\n                      <td>{{ module.qty_remain - numberTapping }}</td>\r\n                      <td>\r\n                        <span v-if=\"module.date_tapping == null\">{{\r\n                          module.date_tapping\r\n                        }}</span\r\n                        ><span v-else>{{\r\n                          new Date(module.date_tapping).toLocaleDateString(\r\n                            'id-ID',\r\n                          )\r\n                        }}</span>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div\r\n                  class=\"col-4\"\r\n                  v-for=\"(module, index) in modalModule.filter(\r\n                    (part) => part.unique_no == selectedPartFilter,\r\n                  )\"\r\n                >\r\n                  {{ console.log(module) }}\r\n                  <div\r\n                    class=\"filter-section\"\r\n                    :class=\"{\r\n                      'over-qty':\r\n                        qtyTappingPart > module.qty_remain ||\r\n                        qtyTappingPart < 0,\r\n                    }\"\r\n                  >\r\n                    <label for=\"filter-date\">Mau Tapping berapa box?</label>\r\n                    <input\r\n                      :class=\"{\r\n                        'over-qty':\r\n                          qtyTappingPart > module.qty_remain ||\r\n                          qtyTappingPart < 0,\r\n                      }\"\r\n                      v-model=\"qtyTappingPart\"\r\n                      min=\"0\"\r\n                      max=\"{module.qty_remain}\"\r\n                      type=\"number\"\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info\"\r\n                    @click=\"checkTappingPart(module.qty_remain)\"\r\n                  >\r\n                    Check\r\n                  </button>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"rounded col-5 flex-end bg-success\"\r\n                  style=\"font-size: 1.5rem; margin-left: 3rem\"\r\n                  v-if=\"checkQtyTappingPart == 'benar'\"\r\n                >\r\n                  Data yang anda masukkan benar!\r\n                </div>\r\n                <div\r\n                  class=\"rounded col-5 flex-end bg-danger\"\r\n                  style=\"font-size: 1.5rem; margin-left: 3rem\"\r\n                  v-if=\"checkQtyTappingPart == 'salah'\"\r\n                >\r\n                  Data yang anda masukkan salah, Silahkan periksa qty remain nya\r\n                </div>\r\n                <div\r\n                  class=\"rounded col-5 flex-end bg-warning\"\r\n                  style=\"font-size: 1.5rem; margin-left: 3rem\"\r\n                  v-if=\"checkQtyTappingPart == 'belum'\"\r\n                >\r\n                  Masukkan jumlah terlebih dulu!\r\n                </div>\r\n              </CModalBody>\r\n              <button\r\n                v-if=\"checkQtyTappingPart == 'benar'\"\r\n                type=\"button\"\r\n                class=\"btn btn-info\"\r\n                @click=\"checkTappingPart(module.qty_remain)\"\r\n              >\r\n                Save\r\n              </button>\r\n            </CModal>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"d-flex justify-content-end table-section\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-warning\"\r\n            @click=\"handleModalAddPart()\"\r\n          >\r\n            Edit</button\r\n          ><button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            @click=\"handleDel(index)\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div></CModalBody\r\n    ></CModal\r\n  ><!--!Delete List Part --><CModal\r\n    size=\"xl\"\r\n    :visible=\"del\"\r\n    @close=\"\r\n      () => {\r\n        del = false\r\n      }\r\n    \"\r\n    ><CModalBody style=\"font-size: 8rem; text-align: center\"\r\n      >R U Sure delete{{ delModal.part_no }}?<button\r\n        type=\"button\"\r\n        class=\"btn btn-xl btn-danger\"\r\n        @click=\"handleDel(index)\"\r\n      >\r\n        Delete\r\n      </button></CModalBody\r\n    ></CModal\r\n  >\r\n</template>\r\n<script>\r\nimport { CModalBody } from '@coreui/vue'\r\nimport axios from 'axios'\r\nimport { ref } from 'vue'\r\nimport parts from '@/views/dataParts.vue'\r\nimport { add } from 'date-fns'\r\nimport VueTreeselect from 'vue3-treeselect'\r\nimport 'vue3-treeselect/dist/vue3-treeselect.css'\r\nconst modal = ref(!1)\r\nconst ModalAddModule = ref(!1)\r\nconst moduleDelete = ref(!1)\r\nconst modalAddPart = ref(!1)\r\nconst del = ref(!1)\r\nexport default {\r\n  components: { name: 'TappingModule', VueTreeselect },\r\n  data() {\r\n    return {\r\n      modal,\r\n      moduleDelete,\r\n      modalAddPart,\r\n      del,\r\n      module: [],\r\n      ModalAddModule,\r\n      selectedModuleType: 'All',\r\n      selectedExporter: 'All',\r\n      selectedDate: new Date(),\r\n      selectedPartFilter: null,\r\n\r\n      qtyTappingPart: 0,\r\n      numberTapping: 0,\r\n      checkQtyTappingPart: null,\r\n\r\n      part_no: '',\r\n      part_name: '',\r\n      unique_no: '',\r\n      qty_kanban: '',\r\n      qty_remain: '',\r\n      date_tapping: null,\r\n      date_overflow: null,\r\n      date_unpacking: null,\r\n      page: 0,\r\n      modalModule: [],\r\n      modalMod: 0,\r\n      editIndex: null,\r\n      editModal: {},\r\n      delModal: {},\r\n      listPart: 0,\r\n    }\r\n  },\r\n  mounted() {\r\n    axios.get('http://localhost:5000/module').then((response) => {\r\n      console.log(response.data.data)\r\n      this.module = response.data.data\r\n      console.log(\r\n        response.data.data.filter((module) => module.exporter_name == 'TMC')\r\n          .length,\r\n      )\r\n    })\r\n    console.log(parts)\r\n  },\r\n  computed: {\r\n    filteredModule() {\r\n      return this.module.filter((module) => {\r\n        const matchModuleType =\r\n          this.selectedModuleType === 'All' ||\r\n          module.module_type === this.selectedModuleType\r\n        console.log(this.selectedExporter)\r\n        const matchExporter =\r\n          this.selectedExporter === 'All' ||\r\n          module.exporter_name === this.selectedExporter\r\n        let mts = new Date(this.selectedDate)\r\n        let mtd = new Date(module.date_receive)\r\n        let mtn = new Date()\r\n        console.log(mtn)\r\n        const matchMonth = !this.selectedDate || mtd == mts\r\n        this.page = 0\r\n        return matchModuleType && matchExporter && matchMonth\r\n      })\r\n    },\r\n  },\r\n  methods: {\r\n    getModuleStatus(module) {\r\n   console.log(module.parts)\r\n      const hasNullTapping = parts.some((part) => part.date_tapping != null)\r\n      return hasNullTapping ? 'Module Tapping' : 'Module Unpacking'\r\n    },\r\n    handleModal(id) {\r\n      console.log(id)\r\n      console.log(this.module.filter((module) => module._id == id)[0].module_no)\r\n      this.modalMod = this.module.filter((module) => module._id == id)[0]\r\n      this.modalModule = this.module.filter(\r\n        (module) => module._id == id,\r\n      )[0].parts\r\n      this.modal = !modal.value\r\n      this.edit = !1\r\n      this.del = !1\r\n    },\r\n    handleDelete(id) {\r\n      console.log(this.module.filter((module) => module._id == id)[0])\r\n      this.modalMod = [this.module.filter((module) => module._id == id)[0]]\r\n      console.log(!moduleDelete.value)\r\n      this.moduleDelete = !moduleDelete.value\r\n    },\r\n    handleDeleteConfirm(id) {\r\n      console.log(id)\r\n      axios\r\n        .delete('http://localhost:5000/module/' + id)\r\n        .then((response) => {\r\n          console.log(response.data)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n      this.moduleDelete = !moduleDelete.value\r\n    },\r\n    handleModalAddPartOf(num) {\r\n      this.partTypeOptions = num.parts.map((part) => ({\r\n        id: part.unique_no,\r\n        label: part.unique_no,\r\n      }))\r\n      this.modalAddPart = !modalAddPart.value\r\n    },\r\n    handleDel(num) {\r\n      this.del = !del.value\r\n      console.log(this.modalModule[num])\r\n      this.delModal = this.modalModule[num]\r\n    },\r\n    prevPage() {\r\n      if (this.page > 3) {\r\n        this.page = this.page - 4\r\n      } else {\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.page < this.module.length - 4) {\r\n        this.page = this.page + 4\r\n        console.log('add')\r\n      } else {\r\n      }\r\n    },\r\n    editItem(index) {\r\n      this.editIndex = index\r\n    },\r\n    saveEdit(index) {\r\n      this.editIndex = null\r\n      console.log('Saved:', this.modalModule[index])\r\n    },\r\n    addList() {\r\n      this.listPart = this.listPart + 1\r\n      console.log(this.listPart)\r\n    },\r\n    handleModalAddPart(modalMod) {\r\n      console.log(modalMod)\r\n      const newParts = modalMod.parts.map((item) => ({\r\n        part_no: item.part_no,\r\n        part_name: item.part_name,\r\n        unique_no: item.unique_no,\r\n        qty_kanban: item.qty_kanban,\r\n        qty_remain: item.qty_remain,\r\n        date_tapping: item.date_tapping,\r\n        date_overflow: item.date_overflow,\r\n        date_unpacking: item.date_unpacking,\r\n      }))\r\n      let newPart = {\r\n        part_no: this.part_no,\r\n        part_name: this.part_name,\r\n        unique_no: this.unique_no,\r\n        qty_kanban: this.qty_kanban,\r\n        qty_remain: this.qty_remain,\r\n        date_tapping: this.date_tapping,\r\n        date_overflow: this.date_overflow,\r\n        date_unpacking: this.date_unpacking,\r\n      }\r\n      console.log(newParts)\r\n      let newModal = [...newParts, newPart]\r\n      console.log(newModal)\r\n      let newModule = {\r\n        module_type: modalMod.module_type,\r\n        exporter_name: modalMod.exporter_name,\r\n        module_no: modalMod.module_no,\r\n        module_note: modalMod.module_note,\r\n        date_receive: modalMod.date_receive,\r\n        parts: newModal,\r\n      }\r\n      console.log(newModule)\r\n      console.log('http://localhost:5000/module/' + modalMod._id)\r\n      axios\r\n        .put('http://localhost:5000/module/' + modalMod._id, newModule)\r\n        .then((response) => {\r\n          console.log(response.data)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    handleModalAddModule() {\r\n      console.log(parts)\r\n      this.ModalAddModule = !ModalAddModule.value\r\n    },\r\n    checkTappingPart(num) {\r\n      this.numberTapping = this.qtyTappingPart\r\n      if (this.qtyTappingPart == 0) {\r\n        this.checkQtyTappingPart = 'belum'\r\n      } else if (this.qtyTappingPart <= num && this.qtyTappingPart > 0) {\r\n        this.checkQtyTappingPart = 'benar'\r\n      } else if (this.qtyTappingPart > num || this.qtyTappingPart < 0) {\r\n        this.checkQtyTappingPart = 'salah'\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n.container {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n.bg {\r\n  background: rgba(255, 255, 255, 0.25);\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(4px);\r\n  -webkit-backdrop-filter: blur(4px);\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n}\r\n.mdl {\r\n  height: 6rem;\r\n}\r\n.col-module {\r\n  font-size: 2rem;\r\n}\r\n.fz1 {\r\n  padding: 0;\r\n  font-size: 5rem;\r\n}\r\n.col-minmodule {\r\n  font-size: 1rem;\r\n  background-color: aquamarine;\r\n}\r\n.title {\r\n  padding: 0 0 0 10px;\r\n  max-height: 3.5rem;\r\n  background-color: #999;\r\n}\r\n.upload-section {\r\n  justify-content: space-between;\r\n  margin: 20px;\r\n}\r\n.filter-section {\r\n  display: grid;\r\n  width: 25%;\r\n}\r\n.filter-section label {\r\n  font-weight: bold;\r\n}\r\n.filter-section input,\r\n.filter-section select {\r\n  background: rgba(255, 255, 255, 0.25);\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(4px);\r\n  -webkit-backdrop-filter: blur(4px);\r\n  border-radius: 3px;\r\n  border: 0;\r\n  height: 2rem;\r\n}\r\ninput[type='checkbox']:checked {\r\n  content: 'edit';\r\n}\r\n\r\n.over-qty {\r\n  color: red;\r\n}\r\n\r\n.file-name {\r\n  margin-left: 10px;\r\n}\r\n.data-uploaded {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 98%;\r\n  margin: 0 1%;\r\n}\r\n.data-uploaded button {\r\n  position: relative;\r\n  height: 2rem;\r\n  top: 1rem;\r\n}\r\n.table-section {\r\n  margin: 10px;\r\n}\r\n.data-table {\r\n  margin: 0 1%;\r\n  margin-bottom: 10px;\r\n  width: 98%;\r\n  border-collapse: collapse;\r\n}\r\n.data-table input {\r\n  width: 5.5rem;\r\n}\r\n.data-table th {\r\n  background-color: skyblue;\r\n}\r\n.data-table th,\r\n.data-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.page-navigation {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 5px 0;\r\n}\r\n.page-navigation button {\r\n  margin: 0;\r\n  padding: 10px;\r\n  color: black;\r\n  border: 1px skyblue solid;\r\n  cursor: pointer;\r\n  background-color: white;\r\n}\r\n.page-navigation button:hover {\r\n  background-color: #007bff;\r\n}\r\n.page-numbers {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.submit-button {\r\n  margin-top: 20px;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.submit-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}