{"ast":null,"code":"export default {\n  name: 'spsv2',\n  mounted() {\n    // Request fullscreen when the component is mounted\n    this.enterFullScreen();\n\n    // Event listener to track fullscreen changes\n    document.addEventListener('fullscreenchange', this.checkFullScreen);\n    this.setFullHeight();\n    window.addEventListener(\"resize\", this.setFullHeight);\n  },\n  methods: {\n    enterFullScreen() {\n      const doc = document.documentElement;\n      if (!document.fullscreenElement) {\n        doc.requestFullscreen().catch(err => {\n          alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n        });\n      }\n    },\n    checkFullScreen() {\n      this.isFullScreen = !document.fullscreenElement;\n    }\n  },\n  beforeDestroy() {\n    document.removeEventListener('fullscreenchange', this.checkFullScreen);\n  }\n};","map":{"version":3,"names":["name","mounted","enterFullScreen","document","addEventListener","checkFullScreen","setFullHeight","window","methods","doc","documentElement","fullscreenElement","requestFullscreen","catch","err","alert","message","isFullScreen","beforeDestroy","removeEventListener"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\15\\FE\\src\\components\\RTSC\\SPSv2.vue"],"sourcesContent":["<template>\r\n <div class=\"andon-container\">\r\n    <div class=\"header\">STOCK SPS</div>\r\n    <div class=\"content-container\">\r\n      <div class=\"content large\">Content 1</div>\r\n      <div class=\"content small\">Content 2</div>\r\n      <div class=\"content small\">Content 3</div>\r\n      <div class=\"content small\">Content 4</div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'spsv2',\r\n  mounted() {\r\n    // Request fullscreen when the component is mounted\r\n    this.enterFullScreen()\r\n\r\n    // Event listener to track fullscreen changes\r\n    document.addEventListener('fullscreenchange', this.checkFullScreen)\r\n\r\n    this.setFullHeight();\r\n    window.addEventListener(\"resize\", this.setFullHeight);\r\n  },\r\n  methods: {\r\n    enterFullScreen() {\r\n      const doc = document.documentElement\r\n      if (!document.fullscreenElement) {\r\n        doc.requestFullscreen().catch((err) => {\r\n          alert(\r\n            `Error attempting to enable full-screen mode: ${err.message} (${err.name})`,\r\n          )\r\n        })\r\n      }\r\n    },\r\n    checkFullScreen() {\r\n      this.isFullScreen = !document.fullscreenElement\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('fullscreenchange', this.checkFullScreen)\r\n  },\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"mappings":"AAcA,eAAe;EACbA,IAAI,EAAE,OAAO;EACbC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,eAAe,CAAC;;IAErB;IACAC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAACC,eAAe;IAElE,IAAI,CAACC,aAAa,CAAC,CAAC;IACpBC,MAAM,CAACH,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACE,aAAa,CAAC;EACvD,CAAC;EACDE,OAAO,EAAE;IACPN,eAAeA,CAAA,EAAG;MAChB,MAAMO,GAAE,GAAIN,QAAQ,CAACO,eAAc;MACnC,IAAI,CAACP,QAAQ,CAACQ,iBAAiB,EAAE;QAC/BF,GAAG,CAACG,iBAAiB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;UACrCC,KAAK,CACH,gDAAgDD,GAAG,CAACE,OAAO,KAAKF,GAAG,CAACd,IAAI,GAC1E;QACF,CAAC;MACH;IACF,CAAC;IACDK,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACY,YAAW,GAAI,CAACd,QAAQ,CAACQ,iBAAgB;IAChD;EACF,CAAC;EACDO,aAAaA,CAAA,EAAG;IACdf,QAAQ,CAACgB,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAACd,eAAe;EACvE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}