{"ast":null,"code":"import { CCard, CCardHeader, CCardBody, CCardText } from '@coreui/vue';\nimport data from '@/standalone/components/data.vue';\nimport '@/components/RTSC/components/rtsc.css';\nexport default {\n  name: 'counterPline',\n  component: {\n    data,\n    CCard,\n    CCardHeader,\n    CCardBody,\n    CCardText\n  },\n  props: {\n    pLane: '',\n    counter: '',\n    pLaneTime: ''\n  },\n  data() {\n    return {\n      totalTime: 10 * 60,\n      // Total time in seconds (10 minutes)\n      timeRemaining: 10 * 60,\n      // Initialize remaining time\n      timer: null\n    };\n  },\n  computed: {\n    formattedTime() {\n      const minutes = Math.floor(this.timeRemaining / 60);\n      const seconds = this.timeRemaining % 60;\n      return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    }\n  },\n  methods: {\n    startCountdown() {\n      this.timer = setInterval(() => {\n        if (this.timeRemaining > 0) {\n          this.timeRemaining--;\n        } else {\n          clearInterval(this.timer);\n        }\n      }, 1000);\n    }\n  },\n  mounted() {\n    this.startCountdown();\n  },\n  beforeDestroy() {\n    clearInterval(this.timer); // Clear the timer when the component is destroyed\n  }\n};","map":{"version":3,"names":["CCard","CCardHeader","CCardBody","CCardText","data","name","component","props","pLane","counter","pLaneTime","totalTime","timeRemaining","timer","computed","formattedTime","minutes","Math","floor","seconds","String","padStart","methods","startCountdown","setInterval","clearInterval","mounted","beforeDestroy"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\18\\FE\\src\\components\\RTSC\\components\\RTSCNextFillIn.vue"],"sourcesContent":["<template>\n  <CCard class=\"cCard cCardH\">\n    <div class=\"title\">Next Fill In </div>\n    <CCardBody className=\"d-flex flex-row bT\">\n      <CCard  className=\"col-6 bR\">\n        <div class=\"title\">P-Lane </div>\n        <CCardBody  >\n          <CCardText className=\"fC cardA\">\n            {{ pLane }}\n          </CCardText>\n        </CCardBody>\n      </CCard>\n      <CCard  className=\"col-6\">\n        <div class=\"title\">Counter </div>\n        <CCardBody >\n          <CCardText className=\"fC cardA\">\n            {{ counter }}\n          </CCardText>\n        </CCardBody>\n      </CCard>\n    </CCardBody>\n    <CCardFooter class=\"title footer \">30 Min left </CCardFooter>\n  </CCard>\n</template>\n \n\n<script>\nimport { CCard, CCardHeader, CCardBody, CCardText } from '@coreui/vue'\nimport data from '@/standalone/components/data.vue'\nimport '@/components/RTSC/components/rtsc.css'\n\nexport default {\n  name: 'counterPline',\n  component: { data , CCard, CCardHeader, CCardBody, CCardText },\n  props: {\n    pLane: '',\n    counter: '',\n    pLaneTime: '',\n  },\n\n  data() {\n    return {\n      totalTime: 10 * 60, // Total time in seconds (10 minutes)\n      timeRemaining: 10 * 60, // Initialize remaining time\n      timer: null,\n    }\n  },\n  computed: {\n    formattedTime() {\n      const minutes = Math.floor(this.timeRemaining / 60)\n      const seconds = this.timeRemaining % 60\n      return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(\n        2,\n        '0',\n      )}`\n    },\n  },\n  methods: {\n    startCountdown() {\n      this.timer = setInterval(() => {\n        if (this.timeRemaining > 0) {\n          this.timeRemaining--\n        } else {\n          clearInterval(this.timer)\n        }\n      }, 1000)\n    },\n  },\n  mounted() {\n    this.startCountdown()\n  },\n  beforeDestroy() {\n    clearInterval(this.timer) // Clear the timer when the component is destroyed\n  },\n}\n</script>\n"],"mappings":"AA2BA,SAASA,KAAK,EAAEC,WAAW,EAAEC,SAAS,EAAEC,SAAQ,QAAS,aAAY;AACrE,OAAOC,IAAG,MAAO,kCAAiC;AAClD,OAAO,uCAAsC;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAE;IAAEF,IAAG;IAAIJ,KAAK;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAU,CAAC;EAC9DI,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE;EACb,CAAC;EAEDN,IAAIA,CAAA,EAAG;IACL,OAAO;MACLO,SAAS,EAAE,EAAC,GAAI,EAAE;MAAE;MACpBC,aAAa,EAAE,EAAC,GAAI,EAAE;MAAE;MACxBC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,MAAMC,OAAM,GAAIC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACN,aAAY,GAAI,EAAE;MAClD,MAAMO,OAAM,GAAI,IAAI,CAACP,aAAY,GAAI,EAAC;MACtC,OAAO,GAAGQ,MAAM,CAACJ,OAAO,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACD,OAAO,CAAC,CAACE,QAAQ,CACpE,CAAC,EACD,GACF,CAAC,EAAC;IACJ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACV,KAAI,GAAIW,WAAW,CAAC,MAAM;QAC7B,IAAI,IAAI,CAACZ,aAAY,GAAI,CAAC,EAAE;UAC1B,IAAI,CAACA,aAAa,EAAC;QACrB,OAAO;UACLa,aAAa,CAAC,IAAI,CAACZ,KAAK;QAC1B;MACF,CAAC,EAAE,IAAI;IACT;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAACH,cAAc,CAAC;EACtB,CAAC;EACDI,aAAaA,CAAA,EAAG;IACdF,aAAa,CAAC,IAAI,CAACZ,KAAK,GAAE;EAC5B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}