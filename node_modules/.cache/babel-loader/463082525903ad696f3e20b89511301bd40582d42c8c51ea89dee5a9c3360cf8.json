{"ast":null,"code":"import ConditionStock from '@/components/RTSC/components/ConditionStock.vue';\nimport Content from '@/components/Content.vue';\nimport CounterPline from '@/components/RTSC/components/RTSCNextFillIn.vue';\nimport VariantProgress from '@/components/RTSC/components/RTSCOutVariant.vue';\nimport StockChart from '@/components/RTSC/components/RTSCStockChart.vue';\nimport Data from '@/standalone/components/data.vue';\nimport RTSCHead from '@/components/RTSC/components/RTSCHead.vue';\nimport RTSCCriticalPart from '@/components/RTSC/components/RTSCCriticalPart.vue';\nimport RTSCPartCritical from '@/components/RTSC/components/RTSCPartCritical.vue';\nimport RTSCEffect from '@/components/RTSC/components/RTSCEffect.vue';\nimport { chart } from 'highcharts';\nexport default {\n  name: 'sps',\n  components: {\n    CounterPline,\n    ConditionStock,\n    Content,\n    VariantProgress,\n    StockChart,\n    RTSCHead,\n    Data,\n    RTSCCriticalPart,\n    RTSCPartCritical\n  },\n  data() {\n    return {\n      // head\n      area: 'SPS',\n      //conditionStock\n      condStock: 1,\n      condStd: 60,\n      // pLine\n      pLane: 11,\n      counter: 30,\n      pLaneTime: 2,\n      // variantProgress\n      VariantProgress: 170\n    };\n  },\n  mounted() {\n    // Update the date every minute\n\n    // Event listener to track fullscreen changes\n    document.addEventListener('fullscreenchange', this.checkFullScreen);\n  },\n  mounted() {\n    // Request fullscreen when the component is mounted\n    this.enterFullScreen();\n\n    // Event listener to track fullscreen changes\n    document.addEventListener('fullscreenchange', this.checkFullScreen);\n  },\n  methods: {\n    enterFullScreen() {\n      const doc = document.documentElement;\n      if (!document.fullscreenElement) {\n        doc.requestFullscreen().catch(err => {\n          alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n        });\n      }\n    },\n    checkFullScreen() {\n      this.isFullScreen = !document.fullscreenElement;\n    }\n  },\n  beforeDestroy() {\n    document.removeEventListener('fullscreenchange', this.checkFullScreen);\n  }\n};","map":{"version":3,"names":["ConditionStock","Content","CounterPline","VariantProgress","StockChart","Data","RTSCHead","RTSCCriticalPart","RTSCPartCritical","RTSCEffect","chart","name","components","data","area","condStock","condStd","pLane","counter","pLaneTime","mounted","document","addEventListener","checkFullScreen","enterFullScreen","methods","doc","documentElement","fullscreenElement","requestFullscreen","catch","err","alert","message","isFullScreen","beforeDestroy","removeEventListener"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\15\\FE\\src\\components\\RTSC\\SPS.vue"],"sourcesContent":["<template>\n\n  <div class=\"sps\" style=\"height: 100vh; overflow: hidden;\n   /* filter: blur(5px) */\n   \">\n    <!-- <a\n    href=\"#/app/andon/sps\"\n    class=\"menu-right\"\n    > -->\n    <!-- <button\n    style=\"position: fixed; z-index: 99; right: 0; text-decoration: none\"\n    class=\"fullscreen-btn\"\n      v-if=\"!isFullScreen\"\n      @click=\"toggleFullScreen\"\n    >\n      <svg\n        width=\"24\"\n        height=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"feather feather-maximize\"\n      >\n        <path d=\"M8 3H5a2 2 0 0 0-2 2v3\" />\n        <path d=\"M16 3h3a2 2 0 0 1 2 2v3\" />\n        <path d=\"M8 21H5a2 2 0 0 1-2-2v-3\" />\n        <path d=\"M16 21h3a2 2 0 0 0 2-2v-3\" />\n      </svg>\n      <span>Fullscreen</span>\n    </button> -->\n\n    <RTSCHead :area=\"area\" class=\"m-2\" />\n\n    <div class=\"row justify-content-between\" style=\"width: 100%; margin: 0\">\n      <StockChart\n        class=\"col-lg-7 col-12 m-2\"\n        style=\"width: 70%\"\n        :chartTitle=\"Chart\"\n        :pLane=\"pLane\"\n        :counter=\"counter\"\n      />\n      <CounterPline\n        :pLane=\"pLane\"\n        :counter=\"counter\"\n        :pLineTime=\"pLineTime\"\n        class=\"col-lg-4 col-12 m-2\"\n        style=\"width: 27.5%\"\n      />\n      <RTSCCriticalPart class=\"col-lg-6 col-12 m-2\" style=\"width: 60%\" />\n      <VariantProgress class=\"m-2\" style=\"width: 37.5%\" />\n    </div>\n    <div class=\"area\">\n      <ul class=\"circles\">\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ConditionStock from '@/components/RTSC/components/ConditionStock.vue'\nimport Content from '@/components/Content.vue'\nimport CounterPline from '@/components/RTSC/components/RTSCNextFillIn.vue'\nimport VariantProgress from '@/components/RTSC/components/RTSCOutVariant.vue'\nimport StockChart from '@/components/RTSC/components/RTSCStockChart.vue'\nimport Data from '@/standalone/components/data.vue'\nimport RTSCHead from '@/components/RTSC/components/RTSCHead.vue'\nimport RTSCCriticalPart from '@/components/RTSC/components/RTSCCriticalPart.vue'\nimport RTSCPartCritical from '@/components/RTSC/components/RTSCPartCritical.vue'\nimport RTSCEffect from '@/components/RTSC/components/RTSCEffect.vue'\nimport { chart } from 'highcharts'\n\nexport default {\n  name: 'sps',\n  components: {\n    CounterPline,\n    ConditionStock,\n    Content,\n    VariantProgress,\n    StockChart,\n    RTSCHead,\n    Data,\n    RTSCCriticalPart,\n    RTSCPartCritical,\n  },\n  data() {\n    return {\n      // head\n      area: 'SPS',\n      //conditionStock\n      condStock: 1,\n      condStd: 60,\n      // pLine\n      pLane: 11,\n      counter: 30,\n      pLaneTime: 2,\n      // variantProgress\n      VariantProgress: 170,\n    }\n  },\n  mounted() {\n    // Update the date every minute\n\n    // Event listener to track fullscreen changes\n    document.addEventListener('fullscreenchange', this.checkFullScreen)\n  },\n  mounted() {\n    // Request fullscreen when the component is mounted\n    this.enterFullScreen()\n\n    // Event listener to track fullscreen changes\n    document.addEventListener('fullscreenchange', this.checkFullScreen)\n  },\n  methods: {\n    enterFullScreen() {\n      const doc = document.documentElement\n      if (!document.fullscreenElement) {\n        doc.requestFullscreen().catch((err) => {\n          alert(\n            `Error attempting to enable full-screen mode: ${err.message} (${err.name})`,\n          )\n        })\n      }\n    },\n    checkFullScreen() {\n      this.isFullScreen = !document.fullscreenElement\n    },\n  },\n  beforeDestroy() {\n    document.removeEventListener('fullscreenchange', this.checkFullScreen)\n  },\n}\n</script>\n\n<style scoped>\n/* Apply background image to the app */\n.app-background {\n  background-image: url('@/assets/images/bg-blurred_06.jpg');\n  background-size: cover;\n  background-position: center;\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Header Styles */\n.menu-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: rgba(152, 4, 4, 0.8);\n  color: white;\n  padding: 20px;\n  transition: width 0.5s ease;\n  width: 100%;\n  margin: 0 auto;\n}\n\n.menu-header.fullscreen-mode {\n  width: 100%;\n}\n\n.menu-left {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  flex: 1;\n}\n\n.menu-left h2 {\n  margin: 0;\n  font-size: 3rem;\n}\n\n.menu-left p {\n  margin: 0;\n  font-size: 40px;\n  color: #decdcd;\n}\n\n.menu-right {\n  display: flex;\n  align-items: center;\n}\n\n.fullscreen-btn {\n  background-color: #910404;\n  color: white;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  padding: 10px 15px;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n}\n\n.fullscreen-btn svg {\n  margin-right: 5px;\n}\n\n.fullscreen-btn:hover {\n  background-color: #0056b3;\n}\n\n/* Most Critical Parts Section */\n.critical-parts {\n  padding: 20px;\n  margin-top: 20px;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.critical-parts h3 {\n  margin-bottom: 20px;\n  color: black;\n  font-size: 30px;\n  font-weight: bold;\n}\n\n.part-list {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 40px;\n}\n\n.part-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #e6e6e6;\n  border-radius: 8px;\n  padding: 15px;\n  width: 120px;\n  /* Adjust width */\n  height: 120px;\n  /* Adjust height */\n}\n\n.part-code {\n  background-color: #7f0602;\n  color: white;\n  padding: 10px;\n  font-weight: bold;\n  font-size: 24px;\n  /* Adjust font size */\n  border-radius: 5px;\n}\n\n.part-time {\n  background-color: #000;\n  color: white;\n  padding: 5px;\n  font-size: 20px;\n  /* Adjust font size */\n  border-radius: 5px;\n  margin-top: 5px;\n}\n</style>\n"],"mappings":"AAyEA,OAAOA,cAAa,MAAO,iDAAgD;AAC3E,OAAOC,OAAM,MAAO,0BAAyB;AAC7C,OAAOC,YAAW,MAAO,iDAAgD;AACzE,OAAOC,eAAc,MAAO,iDAAgD;AAC5E,OAAOC,UAAS,MAAO,iDAAgD;AACvE,OAAOC,IAAG,MAAO,kCAAiC;AAClD,OAAOC,QAAO,MAAO,2CAA0C;AAC/D,OAAOC,gBAAe,MAAO,mDAAkD;AAC/E,OAAOC,gBAAe,MAAO,mDAAkD;AAC/E,OAAOC,UAAS,MAAO,6CAA4C;AACnE,SAASC,KAAI,QAAS,YAAW;AAEjC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVV,YAAY;IACZF,cAAc;IACdC,OAAO;IACPE,eAAe;IACfC,UAAU;IACVE,QAAQ;IACRD,IAAI;IACJE,gBAAgB;IAChBC;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,IAAI,EAAE,KAAK;MACX;MACAC,SAAS,EAAE,CAAC;MACZC,OAAO,EAAE,EAAE;MACX;MACAC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,CAAC;MACZ;MACAhB,eAAe,EAAE;IACnB;EACF,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACR;;IAEA;IACAC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAACC,eAAe;EACpE,CAAC;EACDH,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACI,eAAe,CAAC;;IAErB;IACAH,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAACC,eAAe;EACpE,CAAC;EACDE,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChB,MAAME,GAAE,GAAIL,QAAQ,CAACM,eAAc;MACnC,IAAI,CAACN,QAAQ,CAACO,iBAAiB,EAAE;QAC/BF,GAAG,CAACG,iBAAiB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;UACrCC,KAAK,CACH,gDAAgDD,GAAG,CAACE,OAAO,KAAKF,GAAG,CAACpB,IAAI,GAC1E;QACF,CAAC;MACH;IACF,CAAC;IACDY,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACW,YAAW,GAAI,CAACb,QAAQ,CAACO,iBAAgB;IAChD;EACF,CAAC;EACDO,aAAaA,CAAA,EAAG;IACdd,QAAQ,CAACe,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAACb,eAAe;EACvE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}