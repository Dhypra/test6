{"ast":null,"code":"import ConditionStock from '@/components/RTSC/components/ConditionStock.vue';\nimport Content from '@/components/Content.vue';\nimport CounterPline from '@/components/RTSC/components/RTSCNextFillIn.vue';\nimport VariantProgress from '@/components/RTSC/components/RTSCOutVariant.vue';\nimport StockChart from '@/components/RTSC/components/RTSCStockChart.vue';\nimport Data from '@/standalone/components/data.vue';\nimport RTSCHead from '@/components/RTSC/components/RTSCHead.vue';\nimport RTSCCriticalPart from '@/components/RTSC/components/RTSCCriticalPart.vue';\nimport RTSCPartCritical from '@/components/RTSC/components/RTSCPartCritical.vue';\nimport RTSCEffect from '@/components/RTSC/components/RTSCEffect.vue';\nimport { chart } from 'highcharts';\nexport default {\n  name: 'spsv2',\n  components: {\n    CounterPline,\n    ConditionStock,\n    Content,\n    VariantProgress,\n    StockChart,\n    RTSCHead,\n    Data,\n    RTSCCriticalPart,\n    RTSCPartCritical\n  },\n  data() {\n    return {\n      // head\n      area: 'SPS',\n      //conditionStock\n      condStock: 1,\n      condStd: 60,\n      // pLine\n      pLane: 11,\n      counter: 30,\n      pLaneTime: 2,\n      // variantProgress\n      VariantProgress: 170\n    };\n  },\n  mounted() {\n    // Update the date every minute\n\n    // Event listener to track fullscreen changes\n    document.addEventListener('fullscreenchange', this.checkFullScreen);\n  },\n  mounted() {\n    // Request fullscreen when the component is mounted\n    this.enterFullScreen();\n\n    // Event listener to track fullscreen changes\n    document.addEventListener('fullscreenchange', this.checkFullScreen);\n  },\n  methods: {\n    enterFullScreen() {\n      const doc = document.documentElement;\n      if (!document.fullscreenElement) {\n        doc.requestFullscreen().catch(err => {\n          alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n        });\n      }\n    },\n    checkFullScreen() {\n      this.isFullScreen = !document.fullscreenElement;\n    }\n  },\n  beforeDestroy() {\n    document.removeEventListener('fullscreenchange', this.checkFullScreen);\n  }\n};","map":{"version":3,"names":["ConditionStock","Content","CounterPline","VariantProgress","StockChart","Data","RTSCHead","RTSCCriticalPart","RTSCPartCritical","RTSCEffect","chart","name","components","data","area","condStock","condStd","pLane","counter","pLaneTime","mounted","document","addEventListener","checkFullScreen","enterFullScreen","methods","doc","documentElement","fullscreenElement","requestFullscreen","catch","err","alert","message","isFullScreen","beforeDestroy","removeEventListener"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\15\\FE\\src\\components\\RTSC\\SPSv2.vue"],"sourcesContent":["<template>\r\n\r\n    <div class=\"sps\" style=\"height: 100vh; overflow: hidden;\r\n     /* filter: blur(5px) */\r\n     \">\r\n      <!-- <a\r\n      href=\"#/app/andon/sps\"\r\n      class=\"menu-right\"\r\n      > -->\r\n      <!-- <button\r\n      style=\"position: fixed; z-index: 99; right: 0; text-decoration: none\"\r\n      class=\"fullscreen-btn\"\r\n        v-if=\"!isFullScreen\"\r\n        @click=\"toggleFullScreen\"\r\n      >\r\n        <svg\r\n          width=\"24\"\r\n          height=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"feather feather-maximize\"\r\n        >\r\n          <path d=\"M8 3H5a2 2 0 0 0-2 2v3\" />\r\n          <path d=\"M16 3h3a2 2 0 0 1 2 2v3\" />\r\n          <path d=\"M8 21H5a2 2 0 0 1-2-2v-3\" />\r\n          <path d=\"M16 21h3a2 2 0 0 0 2-2v-3\" />\r\n        </svg>\r\n        <span>Fullscreen</span>\r\n      </button> -->\r\n  \r\n<!-- !head -->\r\n      <CCard style=\"width: 99%; text-align: left; margin: 0 0 10px 0;border-radius: 15px\">\r\n    <CListGroup\r\n      style=\"background-color: #4cadab; color: white;border-radius: 15px\"\r\n      class=\"text-center\"\r\n    >\r\n      <div\r\n        style=\"\r\n          text-align: left;\r\n          font-weight: bold;\r\n          align-items: center;\r\n          font-size: 2.5rem;\r\n          color: #e0e0e0;\r\n          position: absolute;\r\n          top: 0;\r\n          left: -85px;\r\n        \"\r\n      >\r\n        <pre>\r\n        {{ today }}\r\n        {{ currentTime }} WIB\r\n        {{ shift }} Shift\r\n      </pre\r\n        >\r\n      </div>\r\n\r\n      <div>\r\n        <h1 style=\"font-size: 8rem; font-weight: 700; margin: 0\">\r\n          STOCK {{ area }}\r\n        </h1>\r\n      </div>\r\n    </CListGroup>\r\n  </CCard>\r\n\r\n      <div class=\"main-container\">\r\n        <StockChart\r\n          class=\"col-lg-7 col-12 m-2\"\r\n          style=\"width: 70%\"\r\n          :chartTitle=\"Chart\"\r\n          :pLane=\"pLane\"\r\n          :counter=\"counter\"\r\n        />\r\n        <CounterPline\r\n          :pLane=\"pLane\"\r\n          :counter=\"counter\"\r\n          :pLineTime=\"pLineTime\"\r\n          class=\"col-lg-4 col-12 m-2\"\r\n          style=\"width: 27.5%\"\r\n        />\r\n        <RTSCCriticalPart class=\"col-lg-6 col-12 m-2\" style=\"width: 60%\" />\r\n        <VariantProgress class=\"m-2\" style=\"width: 37.5%\" />\r\n      </div>\r\n\r\n      <!-- animation -->\r\n      <div class=\"area\">\r\n        <ul class=\"circles\">\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import ConditionStock from '@/components/RTSC/components/ConditionStock.vue'\r\n  import Content from '@/components/Content.vue'\r\n  import CounterPline from '@/components/RTSC/components/RTSCNextFillIn.vue'\r\n  import VariantProgress from '@/components/RTSC/components/RTSCOutVariant.vue'\r\n  import StockChart from '@/components/RTSC/components/RTSCStockChart.vue'\r\n  import Data from '@/standalone/components/data.vue'\r\n  import RTSCHead from '@/components/RTSC/components/RTSCHead.vue'\r\n  import RTSCCriticalPart from '@/components/RTSC/components/RTSCCriticalPart.vue'\r\n  import RTSCPartCritical from '@/components/RTSC/components/RTSCPartCritical.vue'\r\n  import RTSCEffect from '@/components/RTSC/components/RTSCEffect.vue'\r\n  import { chart } from 'highcharts'\r\n  \r\n  export default {\r\n    name: 'spsv2',\r\n    components: {\r\n      CounterPline,\r\n      ConditionStock,\r\n      Content,\r\n      VariantProgress,\r\n      StockChart,\r\n      RTSCHead,\r\n      Data,\r\n      RTSCCriticalPart,\r\n      RTSCPartCritical,\r\n    },\r\n    data() {\r\n      return {\r\n        // head\r\n        area: 'SPS',\r\n        //conditionStock\r\n        condStock: 1,\r\n        condStd: 60,\r\n        // pLine\r\n        pLane: 11,\r\n        counter: 30,\r\n        pLaneTime: 2,\r\n        // variantProgress\r\n        VariantProgress: 170,\r\n      }\r\n    },\r\n    mounted() {\r\n      // Update the date every minute\r\n  \r\n      // Event listener to track fullscreen changes\r\n      document.addEventListener('fullscreenchange', this.checkFullScreen)\r\n    },\r\n    mounted() {\r\n      // Request fullscreen when the component is mounted\r\n      this.enterFullScreen()\r\n  \r\n      // Event listener to track fullscreen changes\r\n      document.addEventListener('fullscreenchange', this.checkFullScreen)\r\n    },\r\n    methods: {\r\n      enterFullScreen() {\r\n        const doc = document.documentElement\r\n        if (!document.fullscreenElement) {\r\n          doc.requestFullscreen().catch((err) => {\r\n            alert(\r\n              `Error attempting to enable full-screen mode: ${err.message} (${err.name})`,\r\n            )\r\n          })\r\n        }\r\n      },\r\n      checkFullScreen() {\r\n        this.isFullScreen = !document.fullscreenElement\r\n      },\r\n    },\r\n    beforeDestroy() {\r\n      document.removeEventListener('fullscreenchange', this.checkFullScreen)\r\n    },\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Apply background image to the app */\r\n  .app-background {\r\n    background-image: url('@/assets/images/bg-blurred_06.jpg');\r\n    background-size: cover;\r\n    background-position: center;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  /* Header Styles */\r\n  .menu-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: rgba(152, 4, 4, 0.8);\r\n    color: white;\r\n    padding: 20px;\r\n    transition: width 0.5s ease;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .menu-header.fullscreen-mode {\r\n    width: 100%;\r\n  }\r\n  \r\n  .menu-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    flex: 1;\r\n  }\r\n  \r\n  .menu-left h2 {\r\n    margin: 0;\r\n    font-size: 3rem;\r\n  }\r\n  \r\n  .menu-left p {\r\n    margin: 0;\r\n    font-size: 40px;\r\n    color: #decdcd;\r\n  }\r\n  \r\n  .menu-right {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .fullscreen-btn {\r\n    background-color: #910404;\r\n    color: white;\r\n    font-weight: bold;\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .fullscreen-btn svg {\r\n    margin-right: 5px;\r\n  }\r\n  \r\n  .fullscreen-btn:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  /* Most Critical Parts Section */\r\n  .critical-parts {\r\n    padding: 20px;\r\n    margin-top: 20px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .critical-parts h3 {\r\n    margin-bottom: 20px;\r\n    color: black;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .part-list {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    gap: 40px;\r\n  }\r\n  \r\n  .part-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: #e6e6e6;\r\n    border-radius: 8px;\r\n    padding: 15px;\r\n    width: 120px;\r\n    /* Adjust width */\r\n    height: 120px;\r\n    /* Adjust height */\r\n  }\r\n  \r\n  .part-code {\r\n    background-color: #7f0602;\r\n    color: white;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    /* Adjust font size */\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .part-time {\r\n    background-color: #000;\r\n    color: white;\r\n    padding: 5px;\r\n    font-size: 20px;\r\n    /* Adjust font size */\r\n    border-radius: 5px;\r\n    margin-top: 5px;\r\n  }\r\n  \r\n  /* Main container */\r\n  .main-container {\r\n    flex: 1; /* Allow this container to grow and fill the remaining space */\r\n    display: flex;\r\n    flex-wrap: wrap; /* Allow items to wrap if necessary */\r\n    align-items: stretch; /* Stretch children to match the container's height */\r\n    justify-content: space-between; /* Add spacing between elements */\r\n  }\r\n  \r\n  /* Child components */\r\n  .main-container > * {\r\n    box-sizing: border-box;\r\n    height: 100%; /* Match the height of the parent container */\r\n  }\r\n  </style>\r\n  "],"mappings":"AA2GE,OAAOA,cAAa,MAAO,iDAAgD;AAC3E,OAAOC,OAAM,MAAO,0BAAyB;AAC7C,OAAOC,YAAW,MAAO,iDAAgD;AACzE,OAAOC,eAAc,MAAO,iDAAgD;AAC5E,OAAOC,UAAS,MAAO,iDAAgD;AACvE,OAAOC,IAAG,MAAO,kCAAiC;AAClD,OAAOC,QAAO,MAAO,2CAA0C;AAC/D,OAAOC,gBAAe,MAAO,mDAAkD;AAC/E,OAAOC,gBAAe,MAAO,mDAAkD;AAC/E,OAAOC,UAAS,MAAO,6CAA4C;AACnE,SAASC,KAAI,QAAS,YAAW;AAEjC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IACVV,YAAY;IACZF,cAAc;IACdC,OAAO;IACPE,eAAe;IACfC,UAAU;IACVE,QAAQ;IACRD,IAAI;IACJE,gBAAgB;IAChBC;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,IAAI,EAAE,KAAK;MACX;MACAC,SAAS,EAAE,CAAC;MACZC,OAAO,EAAE,EAAE;MACX;MACAC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,CAAC;MACZ;MACAhB,eAAe,EAAE;IACnB;EACF,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACR;;IAEA;IACAC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAACC,eAAe;EACpE,CAAC;EACDH,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACI,eAAe,CAAC;;IAErB;IACAH,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAACC,eAAe;EACpE,CAAC;EACDE,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChB,MAAME,GAAE,GAAIL,QAAQ,CAACM,eAAc;MACnC,IAAI,CAACN,QAAQ,CAACO,iBAAiB,EAAE;QAC/BF,GAAG,CAACG,iBAAiB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;UACrCC,KAAK,CACH,gDAAgDD,GAAG,CAACE,OAAO,KAAKF,GAAG,CAACpB,IAAI,GAC1E;QACF,CAAC;MACH;IACF,CAAC;IACDY,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACW,YAAW,GAAI,CAACb,QAAQ,CAACO,iBAAgB;IAChD;EACF,CAAC;EACDO,aAAaA,CAAA,EAAG;IACdd,QAAQ,CAACe,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAACb,eAAe;EACvE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}