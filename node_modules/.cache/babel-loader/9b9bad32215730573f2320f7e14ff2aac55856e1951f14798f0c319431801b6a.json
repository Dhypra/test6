{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CCardBody = _resolveComponent(\"CCardBody\");\n  const _component_CCard = _resolveComponent(\"CCard\");\n  return _openBlock(), _createBlock(_component_CCard, {\n    class: \"cCard\"\n  }, {\n    default: _withCtx(() => [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n      class: \"title\"\n    }, \"Critical Part\", -1 /* HOISTED */)), _createVNode(_component_CCardBody, {\n      class: \"container text-center\"\n    }, {\n      default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\" Critical part \")])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_CCard","class","default","_withCtx","_createElementVNode","_createVNode","_component_CCardBody","_cache","_createTextVNode","_"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\14\\FE\\src\\components\\RTSC\\components\\RTSCPartCritical.vue"],"sourcesContent":["<template>\n\n      <CCard class=\"cCard\">\n        <div class=\"title\">Critical Part</div>\n  \n        <CCardBody class=\"container text-center\"> Critical part </CCardBody>\n      </CCard>\n\n  </template>\n\n<script>\nimport { CCard, CCardHeader, CCardBody, CCardText } from '@coreui/vue'\nimport '@/components/RTSC/components/rtsc.css'\nimport data from '@/standalone/components/data.vue'\n\nexport default {\n  name: 'partCritical',\n  components: { data, CCard, CCardHeader, CCardBody, CCardText },\n\n  data() {\n    return {\n      criticalPart: data.parts\n        .filter((part) => part.stockMinute > 60)\n        .map((part) => part)\n        .sort((a, b) => a.stockMinute - b.stockMinute)\n        .slice(0, 9),\n    }\n  },\n  // computed: {\n  //   currentComponent() {\n  //     return this.components[this.currentIndex]\n  //   },\n  // },\n  // mounted() {\n  //   setInterval(() => {\n  //     this.currentIndex = (this.currentIndex + 1) % this.components.length\n  //   }, 5000)\n  // },\n}\n</script>"],"mappings":";;;;uBAEMA,YAAA,CAIQC,gBAAA;IAJDC,KAAK,EAAC;EAAO;IAF1BC,OAAA,EAAAC,QAAA,CAGQ,MAAsC,C,0BAAtCC,mBAAA,CAAsC;MAAjCH,KAAK,EAAC;IAAO,GAAC,eAAa,sBAEhCI,YAAA,CAAoEC,oBAAA;MAAzDL,KAAK,EAAC;IAAuB;MALhDC,OAAA,EAAAC,QAAA,CAKiD,MAAeI,MAAA,QAAAA,MAAA,OALhEC,gBAAA,CAKiD,iBAAe,E;MALhEC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}