{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"text-align\": \"left\",\n    \"font-weight\": \"bold\",\n    \"align-items\": \"center\",\n    \"font-size\": \"2.5rem\",\n    \"color\": \"#e0e0e0\",\n    \"position\": \"absolute\",\n    \"top\": \"0\",\n    \"left\": \"-85px\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"font-size\": \"8rem\",\n    \"font-weight\": \"700\",\n    \"margin\": \"0\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CListGroup = _resolveComponent(\"CListGroup\");\n  const _component_CCard = _resolveComponent(\"CCard\");\n  return _openBlock(), _createBlock(_component_CCard, {\n    style: {\n      \"width\": \"99%\",\n      \"text-align\": \"left\",\n      \"margin\": \"0 0 10px 0\",\n      \"border-radius\": \"15px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_CListGroup, {\n      style: {\n        \"background-color\": \"#4cadab\",\n        \"color\": \"white\",\n        \"border-radius\": \"15px\"\n      },\n      class: \"text-center\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"pre\", null, \"        \" + _toDisplayString($data.today) + \"\\n        \" + _toDisplayString($data.currentTime) + \" WIB\\n        \" + _toDisplayString($data.shift) + \" Shift\\n      \", 1)]), _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", _hoisted_2, \" STOCK \" + _toDisplayString($props.area), 1)])]),\n      _: 1\n    })]),\n    _: 1\n  });\n}","map":{"version":3,"names":["style","_createBlock","_component_CCard","default","_withCtx","_createVNode","_component_CListGroup","class","_createElementVNode","_hoisted_1","_toDisplayString","$data","today","currentTime","shift","_hoisted_2","$props","area","_"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\14\\FE\\src\\components\\RTSC\\components\\RTSCHead.vue"],"sourcesContent":["<template>\n  <!-- judul -->\n  <CCard style=\"width: 99%; text-align: left; margin: 0 0 10px 0;border-radius: 15px\">\n    <CListGroup\n      style=\"background-color: #4cadab; color: white;border-radius: 15px\"\n      class=\"text-center\"\n    >\n      <div\n        style=\"\n          text-align: left;\n          font-weight: bold;\n          align-items: center;\n          font-size: 2.5rem;\n          color: #e0e0e0;\n          position: absolute;\n          top: 0;\n          left: -85px;\n        \"\n      >\n        <pre>\n        {{ today }}\n        {{ currentTime }} WIB\n        {{ shift }} Shift\n      </pre\n        >\n      </div>\n\n      <div>\n        <h1 style=\"font-size: 8rem; font-weight: 700; margin: 0\">\n          STOCK {{ area }}\n        </h1>\n      </div>\n    </CListGroup>\n  </CCard>\n</template>\n\n<script>\nexport default {\n  name: 'head',\n  props: ['area'],\n  data() {\n    return {\n      currentTime: '',\n      today: '',\n      shift: '',\n    }\n  },\n\n  methods: {\n    getNameDay() {\n      const days = [\n        'Minggu',\n        'Senin',\n        'Selasa',\n        'Rabu',\n        'Kamis',\n        'Jumat',\n        'Sabtu',\n      ]\n      const months = [\n        'Januari',\n        'Februari',\n        'Maret',\n        'April',\n        'Mei',\n        'Juni',\n        'Juli',\n        'Augustus',\n        'September',\n        'Oktober',\n        '-11',\n        'Desember',\n      ]\n      const date = new Date()\n      const hour = date.getHours()\n      const day = date.getDay()\n      const hari = date.getDate()\n      const month = date.getMonth()\n      const year = date.getFullYear()\n      const now = `${days[day]},${hari}-${month}-${year}`\n      this.today = now\n      this.shift = hour>=5||hour<=17 ? 'Day' : 'Night'\n    },\n\n    getCurrentTime() {\n      const padWithZero = (number) => (number < 10 ? '0' + number : number)\n      const now = new Date()\n      const hours = padWithZero(now.getHours())\n      const minutes = padWithZero(now.getMinutes())\n      const seconds = padWithZero(now.getSeconds())\n\n      this.currentTime = `${hours}:${minutes}:${seconds}`\n    },\n  },\n  mounted() {\n    this.getCurrentTime() // Initialize clock immediately\n    this.getNameDay() // Initialize clock immediately\n    setInterval(this.getCurrentTime, 1000) // Update clock every second\n    setInterval(this.getNameDay, 1000) // Update clock every second\n  },\n}\n</script>\n"],"mappings":";;EAQQA,KASC,EATD;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AASC;;EAWGA,KAAoD,EAApD;IAAA;IAAA;IAAA;EAAA;AAAoD;;;;uBA1B9DC,YAAA,CA+BQC,gBAAA;IA/BDF,KAA4E,EAA5E;MAAA;MAAA;MAAA;MAAA;IAAA;EAA4E;IAFrFG,OAAA,EAAAC,QAAA,CAGI,MA6Ba,CA7BbC,YAAA,CA6BaC,qBAAA;MA5BXN,KAAmE,EAAnE;QAAA;QAAA;QAAA;MAAA,CAAmE;MACnEO,KAAK,EAAC;;MALZJ,OAAA,EAAAC,QAAA,CAOM,MAkBM,CAlBNI,mBAAA,CAkBM,OAlBNC,UAkBM,GANJD,mBAAA,CAKC,aALI,UACL,GAAAE,gBAAA,CAAGC,KAAA,CAAAC,KAAK,IAAG,YACX,GAAAF,gBAAA,CAAGC,KAAA,CAAAE,WAAW,IAAG,gBACjB,GAAAH,gBAAA,CAAGC,KAAA,CAAAG,KAAK,IAAG,gBACb,K,GAIAN,mBAAA,CAIM,cAHJA,mBAAA,CAEK,MAFLO,UAEK,EAFoD,SACjD,GAAAL,gBAAA,CAAGM,MAAA,CAAAC,IAAI,M;MA7BvBC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}