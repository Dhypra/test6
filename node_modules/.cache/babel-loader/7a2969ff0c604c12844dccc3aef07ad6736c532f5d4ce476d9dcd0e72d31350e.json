{"ast":null,"code":"export default {\n  name: 'spsv2',\n  mounted() {\n    // Request fullscreen when the component is mounted\n    this.enterFullScreen();\n\n    // Event listener to track fullscreen changes\n    document.addEventListener('fullscreenchange', this.checkFullScreen);\n  },\n  methods: {\n    enterFullScreen() {\n      const doc = document.documentElement;\n      if (!document.fullscreenElement) {\n        doc.requestFullscreen().catch(err => {\n          alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n        });\n      }\n    },\n    checkFullScreen() {\n      this.isFullScreen = !document.fullscreenElement;\n    }\n  },\n  beforeDestroy() {\n    document.removeEventListener('fullscreenchange', this.checkFullScreen);\n  }\n};","map":{"version":3,"names":["name","mounted","enterFullScreen","document","addEventListener","checkFullScreen","methods","doc","documentElement","fullscreenElement","requestFullscreen","catch","err","alert","message","isFullScreen","beforeDestroy","removeEventListener"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\15\\FE\\src\\components\\RTSC\\SPSv2.vue"],"sourcesContent":["<template>\r\n<div style=\"height: 100vh;width: 100%;\">\r\n\r\n    <!-- !Head -->\r\n<div class=\"bg-secondary\" style=\"height: 20%;\">\r\n\r\n    <CCard style=\"width: 98%; text-align: left; margin: 0 1% ;border-radius: 15px\">\r\n    <CListGroup\r\n      style=\"background-color: #4cadab; color: white;border-radius: 15px\"\r\n      class=\"text-center\"\r\n    >\r\n     \r\n      <div>\r\n        <h1 style=\"font-size: 5rem; font-weight: 700; margin: 0\">\r\n          STOCK SPS\r\n        </h1>\r\n      </div>\r\n    </CListGroup>\r\n  </CCard>\r\n</div>\r\n\r\n\r\n<!-- !Content -->\r\n<div class=\"bg-warning\" style=\"height: 80%;\">\r\n\r\n   content\r\n    \r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'spsv2',\r\n  mounted() {\r\n    // Request fullscreen when the component is mounted\r\n    this.enterFullScreen()\r\n\r\n    // Event listener to track fullscreen changes\r\n    document.addEventListener('fullscreenchange', this.checkFullScreen)\r\n  },\r\n  methods: {\r\n    enterFullScreen() {\r\n      const doc = document.documentElement\r\n      if (!document.fullscreenElement) {\r\n        doc.requestFullscreen().catch((err) => {\r\n          alert(\r\n            `Error attempting to enable full-screen mode: ${err.message} (${err.name})`,\r\n          )\r\n        })\r\n      }\r\n    },\r\n    checkFullScreen() {\r\n      this.isFullScreen = !document.fullscreenElement\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('fullscreenchange', this.checkFullScreen)\r\n  },\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"mappings":"AAuCA,eAAe;EACbA,IAAI,EAAE,OAAO;EACbC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,eAAe,CAAC;;IAErB;IACAC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAACC,eAAe;EACpE,CAAC;EACDC,OAAO,EAAE;IACPJ,eAAeA,CAAA,EAAG;MAChB,MAAMK,GAAE,GAAIJ,QAAQ,CAACK,eAAc;MACnC,IAAI,CAACL,QAAQ,CAACM,iBAAiB,EAAE;QAC/BF,GAAG,CAACG,iBAAiB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;UACrCC,KAAK,CACH,gDAAgDD,GAAG,CAACE,OAAO,KAAKF,GAAG,CAACZ,IAAI,GAC1E;QACF,CAAC;MACH;IACF,CAAC;IACDK,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACU,YAAW,GAAI,CAACZ,QAAQ,CAACM,iBAAgB;IAChD;EACF,CAAC;EACDO,aAAaA,CAAA,EAAG;IACdb,QAAQ,CAACc,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAACZ,eAAe;EACvE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}