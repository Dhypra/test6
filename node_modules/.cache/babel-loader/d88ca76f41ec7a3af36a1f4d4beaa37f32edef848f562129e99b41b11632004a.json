{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport axios from 'axios';\nimport { ref } from 'vue';\nconst modalModuleDetail = ref(false);\nconst modalEditPart = ref(false);\n// import the component\nimport Treeselect from 'vue3-treeselect';\n// import the styles\nimport 'vue3-treeselect/dist/vue3-treeselect.css';\nexport default {\n  components: {\n    name: 'Summary',\n    Treeselect\n  },\n  data() {\n    return {\n      module: [],\n      moduleModal: {},\n      modalModuleDetail,\n      modalEditPart,\n      modalModule: [],\n      modalPart: [],\n      qtyTappingPart: 0,\n      qtyTappingBox: 0,\n      dateTappingBox: null,\n      //filter\n      selectedModuleType: null,\n      selectedExporter: null,\n      selectedModuleNo: null,\n      moduleTypeOptions: [],\n      exporterOptions: [],\n      moduleNoOptions: [],\n      selectedModuleType: 'All',\n      selectedExporter: null,\n      selectedMonth: new Date(),\n      page: 0,\n      moduleNo: 0,\n      editIndex: null\n    };\n  },\n  mounted() {\n    axios.get('http://localhost:5000/module').then(response => {\n      console.log(response.data.data);\n      this.module = response.data.data;\n      // this.tmc = response.data.data.filter(\n      //   (module) => module.exporter_name == 'TMC',\n      // )\n    });\n  },\n  computed: {\n    // Filtered data based on selected filters\n    filteredModule() {\n\n      // // console.log(value)\n      // return this.module.filter((module) => {\n      //   // Filter by Module Type\n      //   const matchModuleType =\n      //     this.selectedModuleType === 'All' ||\n      //     module.module_type === this.selectedModuleType\n\n      //   // Filter by Exporter Name\n      //   console.log(this.selectedExporter)\n      //   const matchExporter =\n      //     this.selectedExporter === 'All' ||\n      //     module.exporter_name === this.selectedExporter\n\n      //   // Filter by Month Receive\n      //   let mts = new Date(this.selectedMonth).getMonth()\n      //   let mtd = new Date(module.date_receive).getMonth()\n      //   let mtn = new Date().getMonth() + 1\n      //   console.log(mtn)\n      //   const matchMonth = !this.selectedMonth || mtd == mts\n\n      //   // Return true if any of the active filters match\n      //   this.page = 0\n      //   return matchModuleType && matchExporter && matchMonth\n      // })\n    }\n  },\n  methods: {\n    filterModuleTypeOptions() {\n      console.log(this.module);\n      this.moduleTypeOptions = [...new Set(this.module.map(m => m.module_type))].map(type => ({\n        id: type,\n        label: type\n      }));\n    },\n    filterExporterOptions() {\n      console.log(this.module);\n      this.exporterOptions = this.module.filter(module => module.module_type === this.selectedModuleType).map(module => module.exporter_name).filter((value, index, self) => self.indexOf(value) === index) // Unique values\n      .map(name => ({\n        id: name,\n        label: name\n      }));\n      this.selectedExporter = null;\n      this.selectedModuleNo = null;\n      this.moduleNoOptions = [];\n    },\n    filterModuleNoOptions() {\n      this.moduleNoOptions = this.module.filter(module => module.module_type === this.selectedModuleType && module.exporter_name === this.selectedExporter).map(module => ({\n        id: module.module_no,\n        label: module.module_no\n      }));\n      this.selectedModuleNo = null;\n    },\n    getModuleStatus(parts) {\n      const hasNullTapping = parts.some(part => part.date_tapping == null);\n      return hasNullTapping ? 'Fresh Module' : 'Tapping Module';\n    },\n    handleModalModuleDetail(id) {\n      console.log(id);\n      this.moduleModal = this.module.filter(module => module._id == id);\n      console.log(this.module.filter(module => module._id == id));\n      console.log(this.module.filter(module => module._id == id)[0].module_no);\n      this.moduleNo = this.module.filter(module => module._id == id)[0].module_no;\n      this.modalModule = this.module.filter(module => module._id == id)[0].parts;\n      this.modalModuleDetail = !modalModuleDetail.value;\n    },\n    handleModalPartEdit(num) {\n      this.modalPart = [this.modalModule[num]];\n      this.modalEditPart = !modalEditPart.value;\n      // console.log(this.modalModule[0])\n    },\n    checkTappingPart(check, max, date) {\n      console.log(date);\n      if (check < max && check > 0 && date != null) {\n        this.qtyTappingPart = 'benar';\n      } else {\n        this.qtyTappingPart = 'salah';\n      }\n    },\n    handleDel() {\n      this.del = !del.value;\n    },\n    prevPage() {\n      if (this.page > 3) {\n        this.page = this.page - 4;\n      } else {}\n    },\n    nextPage() {\n      if (this.page < this.module.length - 4) {\n        this.page = this.page + 4;\n        console.log('add');\n      } else {}\n    },\n    editItem(index) {\n      // Set the edit index for the row\n      this.editIndex = index;\n    },\n    saveEdit(index) {\n      // Save the edited values and reset the edit index\n      this.editIndex = null;\n      console.log('Saved:', this.modalModule[index]);\n    }\n  },\n  created() {\n    console.log(\"asdad\");\n  }\n};","map":{"version":3,"names":["axios","ref","modalModuleDetail","modalEditPart","Treeselect","components","name","data","module","moduleModal","modalModule","modalPart","qtyTappingPart","qtyTappingBox","dateTappingBox","selectedModuleType","selectedExporter","selectedModuleNo","moduleTypeOptions","exporterOptions","moduleNoOptions","selectedMonth","Date","page","moduleNo","editIndex","mounted","get","then","response","console","log","computed","filteredModule","methods","filterModuleTypeOptions","Set","map","m","module_type","type","id","label","filterExporterOptions","filter","exporter_name","value","index","self","indexOf","filterModuleNoOptions","module_no","getModuleStatus","parts","hasNullTapping","some","part","date_tapping","handleModalModuleDetail","_id","handleModalPartEdit","num","checkTappingPart","check","max","date","handleDel","del","prevPage","nextPage","length","editItem","saveEdit","created"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\15\\FE\\src\\views\\Summary.vue"],"sourcesContent":["<template>\r\n  <!-- !Label Module -->\r\n  <div class=\"container\">\r\n    <div class=\"card-body\">\r\n      <div class=\"row\" style=\"padding: 10px\">\r\n        <div class=\"col-custom\">\r\n          <div style=\"overflow: hidden; border-radius: 5px\">\r\n            <div class=\"text-center row mdl\">\r\n              <h1 class=\"card-title col-6 col-module bg-info m-0 p-4\">TMC</h1>\r\n              <h1 class=\"card-text col-6 col-module p-4 bg-light\">\r\n                {{\r\n                  module.filter((module) => module.exporter_name == 'TMC')\r\n                    .length\r\n                }}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-custom\">\r\n          <div style=\"overflow: hidden; border-radius: 5px\">\r\n            <div class=\"text-center row mdl\">\r\n              <h1 class=\"card-title col-6 col-module bg-info m-0 p-4\">STM</h1>\r\n              <h1 class=\"card-text col-6 col-module p-4 bg-light\">\r\n                {{\r\n                  module.filter((module) => module.exporter_name == 'TMV')\r\n                    .length\r\n                }}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-custom\">\r\n          <div style=\"overflow: hidden; border-radius: 5px\">\r\n            <div class=\"text-center row\">\r\n              <h1\r\n                class=\"card-title col-6 col-module m-0 bg-danger\"\r\n                style=\"font-size: 1.7rem; padding-top: 30px\"\r\n              >\r\n                UMWT\r\n              </h1>\r\n              <h1 class=\"card-text col-6 col-module p-4 bg-light\">\r\n                {{\r\n                  module.filter((module) => module.exporter_name == 'UMWT')\r\n                    .length\r\n                }}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-custom\">\r\n          <div style=\"overflow: hidden; border-radius: 5px\">\r\n            <div class=\"text-center row\">\r\n              <h1 class=\"card-title col-6 col-module m-0 p-4 bg-warning\">\r\n                TMV\r\n              </h1>\r\n              <h1 class=\"card-text col-6 col-module p-4 bg-light\">\r\n                {{\r\n                  module.filter((module) => module.exporter_name == 'TMV')\r\n                    .length\r\n                }}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-custom\">\r\n          <div style=\"overflow: hidden; border-radius: 5px\">\r\n            <div class=\"text-center row\">\r\n              <h1 class=\"card-title col-6 col-module m-0 p-4 bg-warning\">\r\n                O/F\r\n              </h1>\r\n              <h1 class=\"card-text col-6 col-module p-4 bg-light\">\r\n                {{\r\n                  module.filter((module) => module.exporter_name == 'O/F')\r\n                    .length\r\n                }}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- !Filter Module -->\r\n  <div class=\"data-uploaded\">\r\n    <div class=\"filter-section\">\r\n      <label for=\"filter-date\">Type Receive</label>\r\n      <treeselect\r\n      v-model=\"selectedModuleType\"\r\n      :options=\"moduleTypeOptions\"\r\n      placeholder=\"Select Module Type\"\r\n      @input=\"filterExporterOptions\"\r\n    ></treeselect>\r\n    </div>\r\n\r\n    <div class=\"filter-section\">\r\n      <label for=\"filter-date\">Exporter Name</label>\r\n      <treeselect\r\n        v-model=\"selectedExporter\"\r\n        :multiple=\"true\"\r\n        :options=\"[\r\n          {\r\n            id: 'TMC',\r\n            label: 'TMC',\r\n          },\r\n          {\r\n            id: 'STM',\r\n            label: 'STM',\r\n          },\r\n          {\r\n            id: 'UMWT',\r\n            label: 'UMWT',\r\n          },\r\n        ]\"\r\n      />\r\n      <h1>\r\n        {{ selectedExporter }}\r\n      </h1>\r\n    </div>\r\n\r\n    <div class=\"filter-section\">\r\n      <label for=\"filter-date\">Module No.</label>\r\n      <select v-model=\"selectedModuleNo\" name=\"module\" id=\"module\">\r\n        <option value=\"All\">All</option>\r\n        <option value=\"N410322\">N410322</option>\r\n        <option value=\"N410323\">N410323</option>\r\n        <option value=\"N211130\">N211130</option>\r\n        <option value=\"N211155\">N211155</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"filter-section\">\r\n      <label for=\"filter-date\">Month Receive</label>\r\n      <input v-model=\"selectedMonth\" type=\"month\" id=\"filter-unique\" />\r\n    </div>\r\n    <button type=\"button\" class=\"btn btn-primary\" @click=\"submitForm\">\r\n      Submit\r\n    </button>\r\n  </div>\r\n\r\n  <!-- !Main Table -->\r\n  <div class=\"table-section\">\r\n    <table class=\"data-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>No</th>\r\n          <th>Module Type</th>\r\n          <th>Exp Name</th>\r\n          <th>Module No.</th>\r\n          <th>Module Type</th>\r\n          <th>Date Receive</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody\r\n        v-for=\"(module, index) in module.slice(page, page + 4)\"\r\n        :key=\"index\"\r\n      >\r\n        <tr>\r\n          <td>{{ index + page + 1 }}</td>\r\n          <td>{{ module.module_type }}</td>\r\n          <td>{{ module.exporter_name }}</td>\r\n          <td>{{ module.module_no }}</td>\r\n          <td>{{ module.module_note }}</td>\r\n          <td>\r\n            {{\r\n              new Date(module.date_receive).toLocaleDateString(['ban', 'id'])\r\n            }}\r\n          </td>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-secondary\"\r\n              @click=\"handleModalModuleDetail(module._id)\"\r\n            >\r\n              Detail\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              style=\"margin-left: 5px\"\r\n              @click=\"handleDelete(index)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <CPagination align=\"center\" aria-label=\"Page navigation example\">\r\n      <CPaginationItem @Click=\"prevPage()\">Previous</CPaginationItem>\r\n      <!-- <CPaginationItem href=\"#\">1</CPaginationItem>\r\n      <CPaginationItem href=\"#\">2</CPaginationItem>\r\n      <CPaginationItem href=\"#\">3</CPaginationItem> -->\r\n      <CPaginationItem @Click=\"nextPage()\">Next</CPaginationItem>\r\n    </CPagination>\r\n\r\n    <!-- !Modal Module Detail -->\r\n    <CModal\r\n      size=\"xl\"\r\n      :visible=\"modalModuleDetail\"\r\n      @close=\"\r\n        () => {\r\n          modalModuleDetail = false\r\n        }\r\n      \"\r\n    >\r\n      <CModalHeader>\r\n        <CModalTitle id=\"OptionalSizesExample1\"\r\n          >Content List Module {{ moduleModal[0].module_no }}</CModalTitle\r\n        >\r\n      </CModalHeader>\r\n\r\n      <CModalBody class=\"row\">\r\n        <div class=\"col-2 text-center\">\r\n          <h3 class=\"m-0\">Sisa Box</h3>\r\n          <br />\r\n          <h1 class=\"border border-dark\">\r\n            {{\r\n              moduleModal[0].parts.reduce((sum, part) => {\r\n                return sum + (part.qty_remain || 0)\r\n              }, 0)\r\n            }}\r\n          </h1>\r\n        </div>\r\n        <div class=\"col-2 text-center\">\r\n          <h3 class=\"m-0\">From Total</h3>\r\n          <br />\r\n          <h1 class=\"border border-dark\">4</h1>\r\n        </div>\r\n        <div class=\"table-section\">\r\n          <table class=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>No</th>\r\n                <th>Module No</th>\r\n                <th>Part No</th>\r\n                <th>Part Name</th>\r\n                <th>Unique No</th>\r\n                <th>Qty Kanban</th>\r\n                <th>Qty Remain</th>\r\n                <th>Date Tapping</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                v-for=\"(modulePart, index) in modalModule\"\r\n                :class=\"[modulePart.date_tapping == null ? '' : 'bg-secondary']\"\r\n              >\r\n                <td>{{ index + 1 }}</td>\r\n                <td>{{ moduleModal[0].module_no }}</td>\r\n                <td>{{ modulePart.part_no }}</td>\r\n                <td>{{ modulePart.part_name }}</td>\r\n                <td>{{ modulePart.unique_no }}</td>\r\n\r\n                <td>\r\n                  <span>{{ modulePart.qty_kanban }}</span>\r\n                </td>\r\n                <td>\r\n                  <span>{{ modulePart.qty_remain }}</span>\r\n                </td>\r\n                <td>\r\n                  {{ console.log(modulePart.date_tapping) }}\r\n                  <span v-if=\"modulePart.date_tapping == null\"></span>\r\n                  <span v-else>{{\r\n                    new Date(modulePart.date_tapping).toLocaleDateString(\r\n                      'id-ID',\r\n                    )\r\n                  }}</span>\r\n                </td>\r\n\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-warning\"\r\n                    @click=\"handleModalPartEdit(index)\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary\"\r\n                    style=\"margin-left: 5px\"\r\n                    @click=\"handleDel(index)\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div class=\"d-flex justify-content-end table-section\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-secondary\"\r\n              @click=\"() => (this.modalModuleDetail = !this.modalModuleDetail)\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </CModalBody>\r\n    </CModal>\r\n\r\n    <!-- !Modal Edit Part -->\r\n    <CModal\r\n      size=\"xl\"\r\n      :visible=\"modalEditPart\"\r\n      @close=\"\r\n        () => {\r\n          modalEditPart = false\r\n        }\r\n      \"\r\n    >\r\n      <CModalHeader>\r\n        <CModalTitle id=\"OptionalSizesExample1\"\r\n          >Tapping Part\r\n          {{ modalPart[0].unique_no }}\r\n        </CModalTitle>\r\n      </CModalHeader>\r\n\r\n      <CModalBody class=\"row\">\r\n        <div class=\"table-section\">\r\n          <table class=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>No</th>\r\n                <th>Module No</th>\r\n                <th>Part No</th>\r\n                <th>Part Name</th>\r\n                <th>Unique No</th>\r\n                <th>Qty Kanban</th>\r\n                <th>Qty Remain</th>\r\n                <th>Date Tapping</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(part, index) in modalPart\">\r\n                <td>\r\n                  {{\r\n                    modalModule.findIndex((module) => module._id == part._id) +\r\n                    1\r\n                  }}\r\n                </td>\r\n                <td>{{ moduleModal[0].module_no }}</td>\r\n                <td>{{ part.part_no }}</td>\r\n                <td>{{ part.part_name }}</td>\r\n                <td>{{ part.unique_no }}</td>\r\n\r\n                <td>\r\n                  <span>{{ part.qty_kanban }}</span>\r\n                </td>\r\n                <td>\r\n                  <span>{{ part.qty_remain }}</span>\r\n                </td>\r\n                <td>\r\n                  <span>{{\r\n                    new Date(part.date_tapping).toLocaleDateString('id-ID')\r\n                  }}</span>\r\n                </td>\r\n\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-warning\"\r\n                    @click=\"handleModalPartEdit()\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary\"\r\n                    style=\"margin-left: 5px\"\r\n                    @click=\"handleDel(index)\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div\r\n          class=\"filter-section col-2\"\r\n          :class=\"{ 'over-qty': qtyTappingBox > modalPart[0].qty_remain }\"\r\n        >\r\n          <label for=\"filter-date\">Mau Tapping berapa box?</label>\r\n          <input v-model=\"qtyTappingBox\" min=\"0\" type=\"number\" />\r\n        </div>\r\n\r\n        <div class=\"filter-section col-2\">\r\n          <label for=\"filter-date\">Date Tapping</label>\r\n          <input v-model=\"dateTappingBox\" type=\"date\" />\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-info col-1\"\r\n          @click=\"\r\n            checkTappingPart(\r\n              qtyTappingBox,\r\n              modalPart[0].qty_remain,\r\n              dateTappingBox,\r\n            )\r\n          \"\r\n        >\r\n          Check\r\n        </button>\r\n\r\n        <div\r\n          class=\"rounded col-5 flex-end bg-success\"\r\n          style=\"font-size: 1.5rem; margin-left: 3rem\"\r\n          v-if=\"qtyTappingPart == 'benar'\"\r\n        >\r\n          Data yang anda masukkan benar!\r\n        </div>\r\n        <div\r\n          class=\"rounded col-5 flex-end bg-danger\"\r\n          style=\"font-size: 1.5rem; margin-left: 3rem\"\r\n          v-if=\"qtyTappingPart == 'salah'\"\r\n        >\r\n          Data yang anda masukkan salah, Silahkan periksa qty remain nya\r\n        </div>\r\n        <div\r\n          class=\"rounded col-5 flex-end bg-success\"\r\n          style=\"font-size: 1.5rem; margin-left: 3rem\"\r\n          v-if=\"qtyTappingPart == 'belum'\"\r\n        >\r\n          Masukkan data terlebuh dulu!\r\n        </div>\r\n\r\n        <div class=\"d-flex justify-content-end table-section\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-secondary\"\r\n            @click=\"() => (this.modalModuleDetail = !this.modalModuleDetail)\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-success\"\r\n            style=\"margin-left: 5px\"\r\n            @click=\"() => (this.modalModuleDetail = !this.modalModuleDetail)\"\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </CModalBody>\r\n    </CModal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { ref } from 'vue'\r\nconst modalModuleDetail = ref(false)\r\nconst modalEditPart = ref(false)\r\n// import the component\r\nimport Treeselect from 'vue3-treeselect'\r\n// import the styles\r\nimport 'vue3-treeselect/dist/vue3-treeselect.css'\r\n\r\nexport default {\r\n  components: {\r\n    name: 'Summary',\r\n    Treeselect,\r\n  },\r\n  data() {\r\n    return {\r\n      module: [],\r\n      moduleModal: {},\r\n\r\n      modalModuleDetail,\r\n      modalEditPart,\r\n\r\n      modalModule: [],\r\n      modalPart: [],\r\n\r\n      qtyTappingPart: 0,\r\n\r\n      qtyTappingBox: 0,\r\n      dateTappingBox: null,\r\n\r\n      //filter\r\n      selectedModuleType: null,\r\n      selectedExporter: null,\r\n      selectedModuleNo: null,\r\n      moduleTypeOptions: [],\r\n      exporterOptions: [],\r\n      moduleNoOptions: [],\r\n\r\n\r\n\r\n\r\n      selectedModuleType: 'All',\r\n      selectedExporter: null,\r\n      selectedMonth: new Date(),\r\n      page: 0,\r\n      moduleNo: 0,\r\n      editIndex: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    axios.get('http://localhost:5000/module').then((response) => {\r\n      console.log(response.data.data)\r\n      this.module = response.data.data\r\n      // this.tmc = response.data.data.filter(\r\n      //   (module) => module.exporter_name == 'TMC',\r\n      // )\r\n    })\r\n  },\r\n  computed: {\r\n    // Filtered data based on selected filters\r\n    filteredModule() {\r\n\r\n      // // console.log(value)\r\n      // return this.module.filter((module) => {\r\n      //   // Filter by Module Type\r\n      //   const matchModuleType =\r\n      //     this.selectedModuleType === 'All' ||\r\n      //     module.module_type === this.selectedModuleType\r\n\r\n      //   // Filter by Exporter Name\r\n      //   console.log(this.selectedExporter)\r\n      //   const matchExporter =\r\n      //     this.selectedExporter === 'All' ||\r\n      //     module.exporter_name === this.selectedExporter\r\n\r\n      //   // Filter by Month Receive\r\n      //   let mts = new Date(this.selectedMonth).getMonth()\r\n      //   let mtd = new Date(module.date_receive).getMonth()\r\n      //   let mtn = new Date().getMonth() + 1\r\n      //   console.log(mtn)\r\n      //   const matchMonth = !this.selectedMonth || mtd == mts\r\n\r\n      //   // Return true if any of the active filters match\r\n      //   this.page = 0\r\n      //   return matchModuleType && matchExporter && matchMonth\r\n      // })\r\n    },\r\n  },\r\n  methods: {\r\n\r\n    filterModuleTypeOptions() {\r\n      console.log(this.module)\r\n      this.moduleTypeOptions = [...new Set(this.module.map((m) => m.module_type))].map(\r\n        (type) => ({\r\n          id: type,\r\n          label: type,\r\n        })\r\n      );\r\n    },\r\n    filterExporterOptions() {\r\n      console.log(this.module)\r\n      this.exporterOptions = this.module\r\n        .filter((module) => module.module_type === this.selectedModuleType)\r\n        .map((module) => module.exporter_name)\r\n        .filter((value, index, self) => self.indexOf(value) === index) // Unique values\r\n        .map((name) => ({\r\n          id: name,\r\n          label: name,\r\n        }));\r\n      this.selectedExporter = null;\r\n      this.selectedModuleNo = null;\r\n      this.moduleNoOptions = [];\r\n    },\r\n    filterModuleNoOptions() {\r\n      this.moduleNoOptions = this.module\r\n        .filter(\r\n          (module) =>\r\n            module.module_type === this.selectedModuleType &&\r\n            module.exporter_name === this.selectedExporter\r\n        )\r\n        .map((module) => ({\r\n          id: module.module_no,\r\n          label: module.module_no,\r\n        }));\r\n      this.selectedModuleNo = null;\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    getModuleStatus(parts) {\r\n      const hasNullTapping = parts.some((part) => part.date_tapping == null)\r\n      return hasNullTapping ? 'Fresh Module' : 'Tapping Module'\r\n    },\r\n    handleModalModuleDetail(id) {\r\n      console.log(id)\r\n      this.moduleModal = this.module.filter((module) => module._id == id)\r\n      console.log(this.module.filter((module) => module._id == id))\r\n      console.log(this.module.filter((module) => module._id == id)[0].module_no)\r\n      this.moduleNo = this.module.filter(\r\n        (module) => module._id == id,\r\n      )[0].module_no\r\n      this.modalModule = this.module.filter(\r\n        (module) => module._id == id,\r\n      )[0].parts\r\n      this.modalModuleDetail = !modalModuleDetail.value\r\n    },\r\n    handleModalPartEdit(num) {\r\n      this.modalPart = [this.modalModule[num]]\r\n      this.modalEditPart = !modalEditPart.value\r\n      // console.log(this.modalModule[0])\r\n    },\r\n\r\n    checkTappingPart(check, max, date) {\r\n      console.log(date)\r\n\r\n      if (check < max && check > 0 && date != null) {\r\n        this.qtyTappingPart = 'benar'\r\n      } else {\r\n        this.qtyTappingPart = 'salah'\r\n      }\r\n    },\r\n\r\n    handleDel() {\r\n      this.del = !del.value\r\n    },\r\n    prevPage() {\r\n      if (this.page > 3) {\r\n        this.page = this.page - 4\r\n      } else {\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.page < this.module.length - 4) {\r\n        this.page = this.page + 4\r\n        console.log('add')\r\n      } else {\r\n      }\r\n    },\r\n    editItem(index) {\r\n      // Set the edit index for the row\r\n      this.editIndex = index\r\n    },\r\n    saveEdit(index) {\r\n      // Save the edited values and reset the edit index\r\n      this.editIndex = null\r\n      console.log('Saved:', this.modalModule[index])\r\n    },\r\n  },\r\n  created() {\r\n    console.log(\"asdad\")\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 0;\r\n  margin: 0;\r\n  /* margin-top: 2rem; */\r\n  /* height: 20vh; */\r\n}\r\n\r\n.bg {\r\n  background: rgba(255, 255, 255, 0.25);\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(4px);\r\n  -webkit-backdrop-filter: blur(4px);\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n}\r\n.mdl {\r\n  height: 5.5rem;\r\n}\r\n.col-module {\r\n  font-size: 2.5rem;\r\n  padding: 10px;\r\n}\r\n\r\n.col-custom {\r\n  flex: 1 1 20%; /* This gives each column 20% of the width */\r\n  padding: 1rem;\r\n}\r\n\r\n.col-minmodule {\r\n  font-size: 1rem;\r\n  background-color: aquamarine;\r\n}\r\n.title {\r\n  padding: 0 0 0 10px;\r\n  max-height: 3.5rem;\r\n  background-color: #999;\r\n}\r\n.upload-section {\r\n  justify-content: space-between;\r\n  margin: 20px;\r\n}\r\n\r\n.filter-section {\r\n  display: grid;\r\n  width: 20%;\r\n}\r\n.filter-section label {\r\n  font-weight: bold;\r\n}\r\n.filter-section input,\r\n.filter-section select {\r\n  background: rgba(255, 255, 255, 0.25);\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(4px);\r\n  -webkit-backdrop-filter: blur(4px);\r\n  border-radius: 3px;\r\n  border: 0;\r\n  height: 2rem;\r\n}\r\n\r\ninput[type='checkbox']:checked {\r\n  content: 'edit';\r\n}\r\n\r\n.file-name {\r\n  margin-left: 10px;\r\n}\r\n.data-uploaded {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0 10px;\r\n}\r\n.data-uploaded button {\r\n  position: relative;\r\n  height: 2rem;\r\n  top: 1rem;\r\n}\r\n.table-section {\r\n  margin: 10px;\r\n}\r\n.data-table {\r\n  margin: 0 1%;\r\n  margin-bottom: 10px;\r\n  width: 98%;\r\n  border-collapse: collapse;\r\n}\r\n/* .data-table input {\r\n  width: 7rem;\r\n} */\r\n.data-table th {\r\n  background-color: skyblue;\r\n}\r\n.data-table th,\r\n.data-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: center;\r\n}\r\ntr {\r\n  border: yellow 1px solid;\r\n}\r\n\r\n.over-qty {\r\n  color: red;\r\n}\r\n\r\n.page-navigation {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 5px 0;\r\n}\r\n\r\n.page-navigation button {\r\n  margin: 0;\r\n  padding: 10px;\r\n  color: black;\r\n  border: 1px skyblue solid;\r\n  cursor: pointer;\r\n  background-color: white;\r\n}\r\n\r\n.page-navigation button:hover {\r\n  background-color: #007bff;\r\n}\r\n\r\n.page-numbers {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.submit-button {\r\n  margin-top: 20px;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.submit-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}