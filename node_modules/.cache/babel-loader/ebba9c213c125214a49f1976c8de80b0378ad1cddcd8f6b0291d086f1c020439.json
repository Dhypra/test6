{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"andon-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createStaticVNode(\"<div class=\\\"header\\\">STOCK SPS</div><div class=\\\"content-container\\\"><div class=\\\"content content1\\\">Content 1</div><div class=\\\"content content2\\\">Content 2</div><div class=\\\"content content3\\\">Content 3</div><div class=\\\"content content4\\\">Content 4</div></div>\", 2)]));\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_cache","_createStaticVNode"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\18\\FE\\src\\components\\RTSC\\SPSv2.vue"],"sourcesContent":["<template>\r\n  <div class=\"andon-container\">\r\n    <div class=\"header\">STOCK SPS</div>\r\n    <div class=\"content-container\">\r\n      <div class=\"content content1\">Content 1</div>\r\n      <div class=\"content content2\">Content 2</div>\r\n      <div class=\"content content3\">Content 3</div>\r\n      <div class=\"content content4\">Content 4</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'spsv2',\r\n  mounted() {\r\n    // Request fullscreen when the component is mounted\r\n    this.enterFullScreen()\r\n\r\n    // Event listener to track fullscreen changes\r\n    document.addEventListener('fullscreenchange', this.checkFullScreen)\r\n\r\n    this.setFullHeight()\r\n    window.addEventListener('resize', this.setFullHeight)\r\n  },\r\n  methods: {\r\n    enterFullScreen() {\r\n      const doc = document.documentElement\r\n      if (!document.fullscreenElement) {\r\n        doc.requestFullscreen().catch((err) => {\r\n          alert(\r\n            `Error attempting to enable full-screen mode: ${err.message} (${err.name})`,\r\n          )\r\n        })\r\n      }\r\n    },\r\n    checkFullScreen() {\r\n      this.isFullScreen = !document.fullscreenElement\r\n    },\r\n    setFullHeight() {\r\n      // Menyesuaikan tinggi elemen dengan tinggi layar\r\n      document.querySelector('.andon-container').style.height =\r\n        window.innerHeight + 'px'\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('fullscreenchange', this.checkFullScreen)\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.setFullHeight)\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Container Utama */\r\n.andon-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #366ecb;\r\n  color: white;\r\n  font-family: Arial, sans-serif;\r\n  height: 100vh; /* Backup: Tinggi default fullscreen */\r\n  overflow: hidden;\r\n}\r\n\r\n/* Header */\r\n.header {\r\n  text-align: center;\r\n  font-size: 5em;\r\n  font-weight: bold;\r\n  padding: 10px;\r\n  background-color: #2d5baa;\r\n}\r\n\r\n/* Container Konten */\r\n.content-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex: 1;\r\n  padding: 10px;\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n}\r\n\r\n/* Konten */\r\n.content {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #2d5baa;\r\n  border-radius: 5px;\r\n  font-size: 1.5em;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  min-width: 150px;\r\n}\r\n\r\n/* Lebar Konten Sesuai Permintaan */\r\n.content1 {\r\n  flex: 0 0 69%; /* Lebar 80% */\r\n}\r\n\r\n.content2 {\r\n  flex: 0 0 30%; /* Lebar 20% */\r\n}\r\n\r\n.content3 {\r\n  flex: 0 0 59%; /* Lebar 60% */\r\n}\r\n\r\n.content4 {\r\n  flex: 0 0 40%; /* Lebar 40% */\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;uBAA5BC,mBAAA,CAQM,OARNC,UAQM,EAAAC,MAAA,QAAAA,MAAA,OATRC,kBAAA,gR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}