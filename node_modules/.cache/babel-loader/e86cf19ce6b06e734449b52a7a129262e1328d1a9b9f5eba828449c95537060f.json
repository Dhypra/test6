{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cCard cCardH\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CCard = _resolveComponent(\"CCard\");\n  const _component_CCardBody = _resolveComponent(\"CCardBody\");\n  const _component_CCardText = _resolveComponent(\"CCardText\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"title\"\n  }, \"Stock Chart\", -1 /* HOISTED */)), _createVNode(_component_CCardBody, null, {\n    default: _withCtx(() => [_createVNode(_component_CCard, {\n      class: \"cCard chartPline\"\n    }, {\n      default: _withCtx(() => [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n        class: \"title\"\n      }, \"P-Lane\", -1 /* HOISTED */)), _createVNode(_component_CCardBody, {\n        className: \"chartCard d-flex flex-row bT\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_CCard, {\n          className: \"col-6 bR fC cardA\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($props.pLane), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_CCard, {\n          className: \"col-6 fC cardA\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($props.counter), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_CCardText, null, {\n      default: _withCtx(() => _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n        id: \"chart\"\n      }, null, -1 /* HOISTED */)])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_CCardBody","default","_withCtx","_component_CCard","className","_createTextVNode","_toDisplayString","$props","pLane","_","counter","_component_CCardText","_cache","id"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\15\\FE\\src\\components\\RTSC\\components\\RTSCStockChartImport.vue"],"sourcesContent":["<template>\n    <div class=\"cCard cCardH\">\n      <div class=\"title\">Stock Chart</div>\n  \n      <CCardBody>\n        <CCard class=\"cCard chartPline\">\n          <div class=\"title\">P-Lane</div>\n          <CCardBody\n            className=\"chartCard d-flex flex-row bT\"\n          >\n            <CCard className=\"col-6 bR fC cardA\"> {{ pLane }} </CCard>\n            <CCard className=\"col-6 fC cardA\" > {{ counter }} </CCard>\n          </CCardBody>\n        </CCard>\n        <CCardText>\n          <div id=\"chart\"></div>\n        </CCardText>\n      </CCardBody>\n    </div>\n  </template>\n  \n  <script>\n  import { CCard, CCardHeader, CCardBody, CCardText } from '@coreui/vue'\n  import ApexCharts from 'apexcharts'\n  import '@/components/RTSC/components/rtsc.css'\n  \n  export default {\n    name: 'StockChartImport',\n    component: { ApexCharts, CCard, CCardHeader, CCardBody, CCardText },\n    props: {\n      chartTitle: String,\n      col1Name: '',\n      col2Name: '',\n      col3Name: '',\n      col1Val: '',\n      col2Val: '',\n      col3Val: '',\n      pLane: '',\n      counter: '',\n    },\n    mounted() {\n      var options = {\n        chart: {\n          type: 'bar',\n          height: '270vh', // Set the height\n          width: '75%', // Set the width\n        },\n        series: [\n          {\n            name: 'stock',\n            data: [\n              {\n                x: '< 1Shift',\n                y: 30,\n                fillColor: '#f00000',\n                strokeColor: '#C23829',\n              }, \n              {\n                x: '3 Days',\n                y: 60,\n                fillColor: '#228b22',\n                strokeColor: '#C23829',\n              },\n              {\n                x: '1 Week',\n                y: 20,\n                fillColor: '#ff6600',\n                strokeColor: '#C23829',\n                style: {\n                  fontSize: '5rem', // Change font size here\n                  color: '#000', // Change color if needed\n                },\n              },\n            ],\n          },\n        ],\n  \n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '80%',\n            barHeight: '80%',\n            dataLabels: {\n              enabled: false, // Enable data labels\n              style: {\n                fontSize: '8rem', // Change font size here\n                color: 'red', // Change color if needed\n              },\n            },\n          },\n        },\n        xaxis: {\n          categories: ['< 1Shift', '3 Days', '1 Week'],\n          labels: {\n            style: {\n              fontSize: '1rem', // Change the font size for x-axis labels\n            },\n          },\n          axisBorder: {\n            show: true, // Hide the border line on the x-axis\n          },\n          axisTicks: {\n            show: true, // Hide ticks on the x-axis\n          },\n        },\n        yAxis: {\n          labels: {\n            style: {\n              fontSize: '5rem', // Set font size for y-axis labels (if applicable)\n            },\n          },\n          axisBorder: {\n            show: true, // Hide the border line on the y-axis\n          },\n          axisTicks: {\n            show: true, // Hide ticks on the y-axis\n          },\n          gridLines: {\n            show: true, // Hide grid lines\n          },\n        },\n        grid: {\n          show: false, // Hide the entire grid\n        },\n  \n        stroke: {\n          show: true, // Hide the bar stroke if you don't want any outline\n        },\n      }\n  \n      var chart = new ApexCharts(document.querySelector('#chart'), options)\n  \n      chart.render()\n    },\n  }\n  </script>\n  \n  <style></style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAc;;;;;uBAAzBC,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAhBJC,mBAAA,CAAoC;IAA/BH,KAAK,EAAC;EAAO,GAAC,aAAW,sBAE9BI,YAAA,CAaYC,oBAAA;IAjBlBC,OAAA,EAAAC,QAAA,CAKQ,MAQQ,CARRH,YAAA,CAQQI,gBAAA;MARDR,KAAK,EAAC;IAAkB;MALvCM,OAAA,EAAAC,QAAA,CAMU,MAA+B,C,0BAA/BJ,mBAAA,CAA+B;QAA1BH,KAAK,EAAC;MAAO,GAAC,QAAM,sBACzBI,YAAA,CAKYC,oBAAA;QAJVI,SAAS,EAAC;MAA8B;QARpDH,OAAA,EAAAC,QAAA,CAUY,MAA0D,CAA1DH,YAAA,CAA0DI,gBAAA;UAAnDC,SAAS,EAAC;QAAmB;UAVhDH,OAAA,EAAAC,QAAA,CAUkD,MAAW,CAV7DG,gBAAA,CAAAC,gBAAA,CAUqDC,MAAA,CAAAC,KAAK,iB;UAV1DC,CAAA;YAWYV,YAAA,CAA0DI,gBAAA;UAAnDC,SAAS,EAAC;QAAgB;UAX7CH,OAAA,EAAAC,QAAA,CAWgD,MAAa,CAX7DG,gBAAA,CAAAC,gBAAA,CAWmDC,MAAA,CAAAG,OAAO,iB;UAX1DD,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAcQV,YAAA,CAEYY,oBAAA;MAhBpBV,OAAA,EAAAC,QAAA,CAeU,MAAsBU,MAAA,QAAAA,MAAA,OAAtBd,mBAAA,CAAsB;QAAjBe,EAAE,EAAC;MAAO,2B;MAfzBJ,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}