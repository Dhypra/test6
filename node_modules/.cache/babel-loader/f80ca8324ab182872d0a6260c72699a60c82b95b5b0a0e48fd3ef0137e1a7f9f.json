{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sps\",\n  style: {\n    \"height\": \"100vh\",\n    \"overflow\": \"hidden\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"text-align\": \"left\",\n    \"font-weight\": \"bold\",\n    \"align-items\": \"center\",\n    \"font-size\": \"2.5rem\",\n    \"color\": \"#e0e0e0\",\n    \"position\": \"absolute\",\n    \"top\": \"0\",\n    \"left\": \"-85px\"\n  }\n};\nconst _hoisted_3 = {\n  style: {\n    \"font-size\": \"8rem\",\n    \"font-weight\": \"700\",\n    \"margin\": \"0\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"main-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CListGroup = _resolveComponent(\"CListGroup\");\n  const _component_CCard = _resolveComponent(\"CCard\");\n  const _component_StockChart = _resolveComponent(\"StockChart\");\n  const _component_CounterPline = _resolveComponent(\"CounterPline\");\n  const _component_RTSCCriticalPart = _resolveComponent(\"RTSCCriticalPart\");\n  const _component_VariantProgress = _resolveComponent(\"VariantProgress\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <a\\r\\n      href=\\\"#/app/andon/sps\\\"\\r\\n      class=\\\"menu-right\\\"\\r\\n      > \"), _createCommentVNode(\" <button\\r\\n      style=\\\"position: fixed; z-index: 99; right: 0; text-decoration: none\\\"\\r\\n      class=\\\"fullscreen-btn\\\"\\r\\n        v-if=\\\"!isFullScreen\\\"\\r\\n        @click=\\\"toggleFullScreen\\\"\\r\\n      >\\r\\n        <svg\\r\\n          width=\\\"24\\\"\\r\\n          height=\\\"24\\\"\\r\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n          viewBox=\\\"0 0 24 24\\\"\\r\\n          fill=\\\"none\\\"\\r\\n          stroke=\\\"currentColor\\\"\\r\\n          stroke-width=\\\"2\\\"\\r\\n          stroke-linecap=\\\"round\\\"\\r\\n          stroke-linejoin=\\\"round\\\"\\r\\n          class=\\\"feather feather-maximize\\\"\\r\\n        >\\r\\n          <path d=\\\"M8 3H5a2 2 0 0 0-2 2v3\\\" />\\r\\n          <path d=\\\"M16 3h3a2 2 0 0 1 2 2v3\\\" />\\r\\n          <path d=\\\"M8 21H5a2 2 0 0 1-2-2v-3\\\" />\\r\\n          <path d=\\\"M16 21h3a2 2 0 0 0 2-2v-3\\\" />\\r\\n        </svg>\\r\\n        <span>Fullscreen</span>\\r\\n      </button> \"), _createVNode(_component_CCard, {\n    style: {\n      \"width\": \"99%\",\n      \"text-align\": \"left\",\n      \"margin\": \"0 0 10px 0\",\n      \"border-radius\": \"15px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_CListGroup, {\n      style: {\n        \"background-color\": \"#4cadab\",\n        \"color\": \"white\",\n        \"border-radius\": \"15px\"\n      },\n      class: \"text-center\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"pre\", null, \"        \" + _toDisplayString(_ctx.today) + \"\\n        \" + _toDisplayString(_ctx.currentTime) + \" WIB\\n        \" + _toDisplayString(_ctx.shift) + \" Shift\\n      \", 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", _hoisted_3, \" STOCK \" + _toDisplayString($data.area), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_StockChart, {\n    class: \"col-lg-7 col-12 m-2\",\n    style: {\n      \"width\": \"70%\"\n    },\n    chartTitle: _ctx.Chart,\n    pLane: $data.pLane,\n    counter: $data.counter\n  }, null, 8 /* PROPS */, [\"chartTitle\", \"pLane\", \"counter\"]), _createVNode(_component_CounterPline, {\n    pLane: $data.pLane,\n    counter: $data.counter,\n    pLineTime: _ctx.pLineTime,\n    class: \"col-lg-4 col-12 m-2\",\n    style: {\n      \"width\": \"27.5%\"\n    }\n  }, null, 8 /* PROPS */, [\"pLane\", \"counter\", \"pLineTime\"]), _createVNode(_component_RTSCCriticalPart, {\n    class: \"col-lg-6 col-12 m-2\",\n    style: {\n      \"width\": \"60%\"\n    }\n  }), _createVNode(_component_VariantProgress, {\n    class: \"m-2\",\n    style: {\n      \"width\": \"37.5%\"\n    }\n  })]), _createCommentVNode(\" animation \"), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"area\"\n  }, [_createElementVNode(\"ul\", {\n    class: \"circles\"\n  }, [_createElementVNode(\"li\"), _createElementVNode(\"li\"), _createElementVNode(\"li\"), _createElementVNode(\"li\"), _createElementVNode(\"li\"), _createElementVNode(\"li\"), _createElementVNode(\"li\"), _createElementVNode(\"li\"), _createElementVNode(\"li\"), _createElementVNode(\"li\")])], -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_CCard","default","_withCtx","_component_CListGroup","_createElementVNode","_hoisted_2","_toDisplayString","_ctx","today","currentTime","shift","_hoisted_3","$data","area","_","_hoisted_4","_component_StockChart","chartTitle","Chart","pLane","counter","_component_CounterPline","pLineTime","_component_RTSCCriticalPart","_component_VariantProgress"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\15\\FE\\src\\components\\RTSC\\SPSv2.vue"],"sourcesContent":["<template>\r\n\r\n    <div class=\"sps\" style=\"height: 100vh; overflow: hidden;\r\n     /* filter: blur(5px) */\r\n     \">\r\n      <!-- <a\r\n      href=\"#/app/andon/sps\"\r\n      class=\"menu-right\"\r\n      > -->\r\n      <!-- <button\r\n      style=\"position: fixed; z-index: 99; right: 0; text-decoration: none\"\r\n      class=\"fullscreen-btn\"\r\n        v-if=\"!isFullScreen\"\r\n        @click=\"toggleFullScreen\"\r\n      >\r\n        <svg\r\n          width=\"24\"\r\n          height=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"feather feather-maximize\"\r\n        >\r\n          <path d=\"M8 3H5a2 2 0 0 0-2 2v3\" />\r\n          <path d=\"M16 3h3a2 2 0 0 1 2 2v3\" />\r\n          <path d=\"M8 21H5a2 2 0 0 1-2-2v-3\" />\r\n          <path d=\"M16 21h3a2 2 0 0 0 2-2v-3\" />\r\n        </svg>\r\n        <span>Fullscreen</span>\r\n      </button> -->\r\n  \r\n      <CCard style=\"width: 99%; text-align: left; margin: 0 0 10px 0;border-radius: 15px\">\r\n    <CListGroup\r\n      style=\"background-color: #4cadab; color: white;border-radius: 15px\"\r\n      class=\"text-center\"\r\n    >\r\n      <div\r\n        style=\"\r\n          text-align: left;\r\n          font-weight: bold;\r\n          align-items: center;\r\n          font-size: 2.5rem;\r\n          color: #e0e0e0;\r\n          position: absolute;\r\n          top: 0;\r\n          left: -85px;\r\n        \"\r\n      >\r\n        <pre>\r\n        {{ today }}\r\n        {{ currentTime }} WIB\r\n        {{ shift }} Shift\r\n      </pre\r\n        >\r\n      </div>\r\n\r\n      <div>\r\n        <h1 style=\"font-size: 8rem; font-weight: 700; margin: 0\">\r\n          STOCK {{ area }}\r\n        </h1>\r\n      </div>\r\n    </CListGroup>\r\n  </CCard>\r\n  \r\n      <div class=\"main-container\">\r\n        <StockChart\r\n          class=\"col-lg-7 col-12 m-2\"\r\n          style=\"width: 70%\"\r\n          :chartTitle=\"Chart\"\r\n          :pLane=\"pLane\"\r\n          :counter=\"counter\"\r\n        />\r\n        <CounterPline\r\n          :pLane=\"pLane\"\r\n          :counter=\"counter\"\r\n          :pLineTime=\"pLineTime\"\r\n          class=\"col-lg-4 col-12 m-2\"\r\n          style=\"width: 27.5%\"\r\n        />\r\n        <RTSCCriticalPart class=\"col-lg-6 col-12 m-2\" style=\"width: 60%\" />\r\n        <VariantProgress class=\"m-2\" style=\"width: 37.5%\" />\r\n      </div>\r\n\r\n      <!-- animation -->\r\n      <div class=\"area\">\r\n        <ul class=\"circles\">\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import ConditionStock from '@/components/RTSC/components/ConditionStock.vue'\r\n  import Content from '@/components/Content.vue'\r\n  import CounterPline from '@/components/RTSC/components/RTSCNextFillIn.vue'\r\n  import VariantProgress from '@/components/RTSC/components/RTSCOutVariant.vue'\r\n  import StockChart from '@/components/RTSC/components/RTSCStockChart.vue'\r\n  import Data from '@/standalone/components/data.vue'\r\n  import RTSCHead from '@/components/RTSC/components/RTSCHead.vue'\r\n  import RTSCCriticalPart from '@/components/RTSC/components/RTSCCriticalPart.vue'\r\n  import RTSCPartCritical from '@/components/RTSC/components/RTSCPartCritical.vue'\r\n  import RTSCEffect from '@/components/RTSC/components/RTSCEffect.vue'\r\n  import { chart } from 'highcharts'\r\n  \r\n  export default {\r\n    name: 'spsv2',\r\n    components: {\r\n      CounterPline,\r\n      ConditionStock,\r\n      Content,\r\n      VariantProgress,\r\n      StockChart,\r\n      RTSCHead,\r\n      Data,\r\n      RTSCCriticalPart,\r\n      RTSCPartCritical,\r\n    },\r\n    data() {\r\n      return {\r\n        // head\r\n        area: 'SPS',\r\n        //conditionStock\r\n        condStock: 1,\r\n        condStd: 60,\r\n        // pLine\r\n        pLane: 11,\r\n        counter: 30,\r\n        pLaneTime: 2,\r\n        // variantProgress\r\n        VariantProgress: 170,\r\n      }\r\n    },\r\n    mounted() {\r\n      // Update the date every minute\r\n  \r\n      // Event listener to track fullscreen changes\r\n      document.addEventListener('fullscreenchange', this.checkFullScreen)\r\n    },\r\n    mounted() {\r\n      // Request fullscreen when the component is mounted\r\n      this.enterFullScreen()\r\n  \r\n      // Event listener to track fullscreen changes\r\n      document.addEventListener('fullscreenchange', this.checkFullScreen)\r\n    },\r\n    methods: {\r\n      enterFullScreen() {\r\n        const doc = document.documentElement\r\n        if (!document.fullscreenElement) {\r\n          doc.requestFullscreen().catch((err) => {\r\n            alert(\r\n              `Error attempting to enable full-screen mode: ${err.message} (${err.name})`,\r\n            )\r\n          })\r\n        }\r\n      },\r\n      checkFullScreen() {\r\n        this.isFullScreen = !document.fullscreenElement\r\n      },\r\n    },\r\n    beforeDestroy() {\r\n      document.removeEventListener('fullscreenchange', this.checkFullScreen)\r\n    },\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Apply background image to the app */\r\n  .app-background {\r\n    background-image: url('@/assets/images/bg-blurred_06.jpg');\r\n    background-size: cover;\r\n    background-position: center;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  /* Header Styles */\r\n  .menu-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: rgba(152, 4, 4, 0.8);\r\n    color: white;\r\n    padding: 20px;\r\n    transition: width 0.5s ease;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .menu-header.fullscreen-mode {\r\n    width: 100%;\r\n  }\r\n  \r\n  .menu-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    flex: 1;\r\n  }\r\n  \r\n  .menu-left h2 {\r\n    margin: 0;\r\n    font-size: 3rem;\r\n  }\r\n  \r\n  .menu-left p {\r\n    margin: 0;\r\n    font-size: 40px;\r\n    color: #decdcd;\r\n  }\r\n  \r\n  .menu-right {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .fullscreen-btn {\r\n    background-color: #910404;\r\n    color: white;\r\n    font-weight: bold;\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .fullscreen-btn svg {\r\n    margin-right: 5px;\r\n  }\r\n  \r\n  .fullscreen-btn:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  /* Most Critical Parts Section */\r\n  .critical-parts {\r\n    padding: 20px;\r\n    margin-top: 20px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .critical-parts h3 {\r\n    margin-bottom: 20px;\r\n    color: black;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .part-list {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    gap: 40px;\r\n  }\r\n  \r\n  .part-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: #e6e6e6;\r\n    border-radius: 8px;\r\n    padding: 15px;\r\n    width: 120px;\r\n    /* Adjust width */\r\n    height: 120px;\r\n    /* Adjust height */\r\n  }\r\n  \r\n  .part-code {\r\n    background-color: #7f0602;\r\n    color: white;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    /* Adjust font size */\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .part-time {\r\n    background-color: #000;\r\n    color: white;\r\n    padding: 5px;\r\n    font-size: 20px;\r\n    /* Adjust font size */\r\n    border-radius: 5px;\r\n    margin-top: 5px;\r\n  }\r\n  \r\n  /* Main container */\r\n  .main-container {\r\n    flex: 1; /* Allow this container to grow and fill the remaining space */\r\n    display: flex;\r\n    flex-wrap: wrap; /* Allow items to wrap if necessary */\r\n    align-items: stretch; /* Stretch children to match the container's height */\r\n    justify-content: space-between; /* Add spacing between elements */\r\n  }\r\n  \r\n  /* Child components */\r\n  .main-container > * {\r\n    box-sizing: border-box;\r\n    height: 100%; /* Match the height of the parent container */\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAESA,KAAK,EAAC,KAAK;EAACC,KAEf,EAFe;IAAA;IAAA;EAAA;;;EAuCbA,KASC,EATD;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AASC;;EAWGA,KAAoD,EAApD;IAAA;IAAA;IAAA;EAAA;AAAoD;;EAOrDD,KAAK,EAAC;AAAgB;;;;;;;;uBAlE7BE,mBAAA,CAoGM,OApGNC,UAoGM,GAjGJC,mBAAA,mFAGK,EACLA,mBAAA,k3BAwBa,EAEbC,YAAA,CA+BIC,gBAAA;IA/BGL,KAA4E,EAA5E;MAAA;MAAA;MAAA;MAAA;IAAA;EAA4E;IAnCzFM,OAAA,EAAAC,QAAA,CAoCI,MA6Ba,CA7BbH,YAAA,CA6BaI,qBAAA;MA5BXR,KAAmE,EAAnE;QAAA;QAAA;QAAA;MAAA,CAAmE;MACnED,KAAK,EAAC;;MAtCZO,OAAA,EAAAC,QAAA,CAwCM,MAkBM,CAlBNE,mBAAA,CAkBM,OAlBNC,UAkBM,GANJD,mBAAA,CAIc,aAJT,UACL,GAAAE,gBAAA,CAAGC,IAAA,CAAAC,KAAK,IAAG,YACX,GAAAF,gBAAA,CAAGC,IAAA,CAAAE,WAAW,IAAG,gBACjB,GAAAH,gBAAA,CAAGC,IAAA,CAAAG,KAAK,IAAG,gBACb,gB,GAIAN,mBAAA,CAIM,cAHJA,mBAAA,CAEK,MAFLO,UAEK,EAFoD,SACjD,GAAAL,gBAAA,CAAGM,KAAA,CAAAC,IAAI,iB;MA9DvBC,CAAA;;IAAAA,CAAA;MAoEMV,mBAAA,CAiBM,OAjBNW,UAiBM,GAhBJhB,YAAA,CAMEiB,qBAAA;IALAtB,KAAK,EAAC,qBAAqB;IAC3BC,KAAkB,EAAlB;MAAA;IAAA,CAAkB;IACjBsB,UAAU,EAAEV,IAAA,CAAAW,KAAK;IACjBC,KAAK,EAAEP,KAAA,CAAAO,KAAK;IACZC,OAAO,EAAER,KAAA,CAAAQ;+DAEZrB,YAAA,CAMEsB,uBAAA;IALCF,KAAK,EAAEP,KAAA,CAAAO,KAAK;IACZC,OAAO,EAAER,KAAA,CAAAQ,OAAO;IAChBE,SAAS,EAAEf,IAAA,CAAAe,SAAS;IACrB5B,KAAK,EAAC,qBAAqB;IAC3BC,KAAoB,EAApB;MAAA;IAAA;8DAEFI,YAAA,CAAmEwB,2BAAA;IAAjD7B,KAAK,EAAC,qBAAqB;IAACC,KAAkB,EAAlB;MAAA;IAAA;MAC9CI,YAAA,CAAoDyB,0BAAA;IAAnC9B,KAAK,EAAC,KAAK;IAACC,KAAoB,EAApB;MAAA;IAAA;QAG/BG,mBAAA,eAAkB,E,0BAClBM,mBAAA,CAaM;IAbDV,KAAK,EAAC;EAAM,IACfU,mBAAA,CAWK;IAXDV,KAAK,EAAC;EAAS,IACjBU,mBAAA,CAAS,OACTA,mBAAA,CAAS,OACTA,mBAAA,CAAS,OACTA,mBAAA,CAAS,OACTA,mBAAA,CAAS,OACTA,mBAAA,CAAS,OACTA,mBAAA,CAAS,OACTA,mBAAA,CAAS,OACTA,mBAAA,CAAS,OACTA,mBAAA,CAAS,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}