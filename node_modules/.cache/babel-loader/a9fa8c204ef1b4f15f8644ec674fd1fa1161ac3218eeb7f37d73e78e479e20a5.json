{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '../assets/brand/Toyota_logo.png';\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CSidebarBrand = _resolveComponent(\"CSidebarBrand\");\n  const _component_AppSidebarNav = _resolveComponent(\"AppSidebarNav\");\n  const _component_CSidebarToggler = _resolveComponent(\"CSidebarToggler\");\n  const _component_CSidebar = _resolveComponent(\"CSidebar\");\n  return _openBlock(), _createBlock(_component_CSidebar, {\n    position: \"fixed\",\n    unfoldable: $setup.sidebarUnfoldable,\n    visible: $setup.sidebarVisible,\n    onVisibleChange: _cache[1] || (_cache[1] = event => _ctx.$store.commit({\n      type: 'updateSidebarVisible',\n      value: event\n    }))\n  }, {\n    default: _withCtx(() => [_createVNode(_component_CSidebarBrand, null, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createElementVNode(\"img\", {\n        src: _imports_0,\n        class: \"img-fluid sidebar-brand-full\",\n        width: \"200\",\n        height: \"200\"\n      }, null, -1 /* HOISTED */), _createElementVNode(\"img\", {\n        src: _imports_0,\n        class: \"sidebar-brand-narrow\",\n        width: \"36\",\n        height: \"10\"\n      }, null, -1 /* HOISTED */)])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_AppSidebarNav, {\n      nav: $data.nav\n    }, null, 8 /* PROPS */, [\"nav\"]), _createVNode(_component_CSidebarToggler, {\n      id: \"SidebarToggler\",\n      class: \"d-none d-lg-flex\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$store.commit('toggleUnfoldable'))\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"unfoldable\", \"visible\"]);\n}","map":{"version":3,"names":["_imports_0","_createBlock","_component_CSidebar","position","unfoldable","$setup","sidebarUnfoldable","visible","sidebarVisible","onVisibleChange","_cache","event","_ctx","$store","commit","default","_withCtx","_createVNode","_component_CSidebarBrand","_createElementVNode","src","class","width","height","_","_component_AppSidebarNav","nav","$data","_component_CSidebarToggler","id","onClick","$event"],"sources":["C:\\Users\\andhi\\webDev\\realtime stock\\14\\FE\\src\\standalone\\components\\AppSidebar.vue"],"sourcesContent":["<template>\n  <CSidebar position=\"fixed\" :unfoldable=\"sidebarUnfoldable\" :visible=\"sidebarVisible\" @visible-change=\"\n    (event) =>\n      $store.commit({\n        type: 'updateSidebarVisible',\n        value: event,\n      })\n  \">\n    <CSidebarBrand>\n      <img src=\"../assets/brand/Toyota_logo.png\" class=\"img-fluid sidebar-brand-full\" width=\"200\" height=\"200\" />\n      <img src=\"../assets/brand/Toyota_logo.png\" class=\"sidebar-brand-narrow\" width=\"36\" height=\"10\" />\n    </CSidebarBrand>\n    <AppSidebarNav v-bind:nav=\"nav\" />\n    <CSidebarToggler id=\"SidebarToggler\" class=\"d-none d-lg-flex\" @click=\"$store.commit('toggleUnfoldable')\" />\n  </CSidebar>\n</template>\n\n<script>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { AppSidebarNav } from './AppSidebarNav'\nimport { logoNegative } from '@/standalone/assets/brand/logo-negative'\nimport { sygnet } from '@/standalone/assets/brand/sygnet'\nimport utils from \"@/utils/CommonUtils\"\nimport api from \"@/apis/CommonAPI\"\nimport navtemplate from '@/_nav.js'\n\nvar strAuthorizedNav = '';\nvar appAuthorized = {};\nconst generateNav = async (newAuthorizedData, isChild) => {\n  strAuthorizedNav += '[';\n  let newAuthorizedDataLength = (newAuthorizedData.length)\n  for (var i = 0; i < newAuthorizedDataLength; i++) {\n    let currentNewAuthorizedData = newAuthorizedData[i];\n    if (currentNewAuthorizedData.children && currentNewAuthorizedData.children.length > 0) {\n      strAuthorizedNav += '{';\n      strAuthorizedNav += ' \"component\": \"CNavGroup\",';\n      strAuthorizedNav += ' \"name\": \"' + (isChild ? '' : '') + currentNewAuthorizedData.displayText + '\",';\n      strAuthorizedNav += ' \"to\": \"' + currentNewAuthorizedData.path + '\",';\n      strAuthorizedNav += ' \"icon\": \"' + (currentNewAuthorizedData.icon) + '\",';\n      strAuthorizedNav += ' \"parentId\": \"' + currentNewAuthorizedData.parentId + '\",';\n      strAuthorizedNav += ' \"items\": '\n      generateNav(currentNewAuthorizedData.children, true);\n      strAuthorizedNav += '},';\n    } else {\n      strAuthorizedNav += '{';\n      strAuthorizedNav += ' \"component\": \"CNavItem\",';\n      strAuthorizedNav += ' \"name\": \"' + (isChild ? '' : '') + currentNewAuthorizedData.displayText + '\",';\n      strAuthorizedNav += ' \"to\": \"' + currentNewAuthorizedData.path + '\",';\n      strAuthorizedNav += ' \"icon\": \"' + (currentNewAuthorizedData.icon) + '\",';\n      strAuthorizedNav += ' \"parentId\": \"' + currentNewAuthorizedData.parentId + '\",';\n      strAuthorizedNav += ' \"applicationId\": \"' + currentNewAuthorizedData.applicationId + '\",';\n      strAuthorizedNav += ' \"linkProps\": { \"queryParams\": { \"applicationId\": \"' + currentNewAuthorizedData.applicationId\n        + '\", \"functionId\": \"' + currentNewAuthorizedData.functionId + '\" } }';\n      strAuthorizedNav += '},';\n    }\n  }\n  strAuthorizedNav += ']';\n}\n\nexport default {\n  name: 'AppSidebar',\n  components: {\n    AppSidebarNav,\n  },\n  data() {\n    return {\n      nav: [\n        {\n          component: 'CNavItem',\n          name: 'Home',\n          to: '/app/dashboard',\n          icon: 'cilHome',\n          parentId: 'ROOT',\n        },\n        {\n          component: 'CNavItem',\n          name: 'SPS',\n          to: '/app/andon/sps',\n          icon: 'cilFolder',\n          parentId: 'ROOT',\n        },\n      \n        {\n          component: 'CNavItem',\n          name: 'P-Line',\n          to: '/app/andon/pline',\n          icon: 'cilStar',\n          parentId: 'ROOT',\n        },\n        {\n          component: 'CNavItem',\n          name: 'Import Part',\n          to: '/app/andon/importpart',\n          icon: 'cilBoatAlt',\n          parentId: 'ROOT',\n        },\n        \n        {\n          component: 'CNavItem',\n          name: 'Master Uploads',\n          to: '/app/specialPart',\n          icon: 'cilStar',\n          parentId: 'ROOT',\n        },\n        {\n          component: 'CNavItem',\n          name: 'Request Modeule',\n          to: '/app/specialPart/content',\n          icon: 'cilStar',\n          parentId: 'ROOT',\n        },\n        {\n          component: 'CNavItem',\n          name: 'Scan Manifest',\n          to: '/app/specialPart/content',\n          icon: 'cilStar',\n          parentId: 'ROOT',\n        },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/quality-operational',\n        //   name: 'Quality Operational',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/gauge-control',\n        //   name: 'Gauge Control',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/gauge-control/detail/:id',\n        //   name: 'Gauge Control Detail',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/gauge-control/add',\n        //   name: 'Gauge Control Add',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/gauge-control/edit/:id',\n        //   name: 'Gauge Control Edit',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/calibration-item/:idGauge',\n        //   name: 'Calibration Item',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/calibration-item/add/:idGauge',\n        //   name: 'Calibration Item Add',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/calibration-item/edit/:id',\n        //   name: 'Calibration Item Edit',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/monthly-planning',\n        //   name: 'Monthly Planning',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/daily-management',\n        //   name: 'Daily Management',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/monthly-planning-holiday',\n        //   name: 'Monthly Planning Holiday',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/monthly-planning-holiday/add',\n        //   name: 'Monthly Planning Holiday Add',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/monthly-planning-holiday/edit/:id',\n        //   name: 'Monthly Planning Holiday Edit',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/custom-planning',\n        //   name: 'Custom Planning',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/custom-planning/add',\n        //   name: 'Custom Planning',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // },\n        // {\n        //   component: 'CNavItem',\n        //   to: '/qdc/custom-planning/edit/:id',\n        //   name: 'Custom Planning',\n        //   icon: '',\n        //   parentId: 'ROOT',\n        // }\n\n        /*define other in here*/\n      ],\n    }\n  },\n  setup() {\n    const store = useStore()\n    return {\n      logoNegative,\n      sygnet,\n      sidebarUnfoldable: computed(() => store.state.sidebarUnfoldable),\n      sidebarVisible: computed(() => store.state.sidebarVisible),\n    }\n  },\n  // async created() {\n  //   let authorizedView = await api.scQueryApi('/api/common/menu-authorized', 'POST', '');\n  //   strAuthorizedNav = '';\n  //   if (authorizedView.data) {\n  //     await generateNav(authorizedView.data.children)\n  //     let jsonAuthorizedNavJSON = JSON.parse('{\"value\": ' + strAuthorizedNav.replaceAll('},]', '}]') + '}');\n\n  //     //this.nav = this.nav.concat(jsonAuthorizedNavJSON.value);\n  //     // this.nav=navtemplate;\n  //   }\n  //   setInterval(async () => {\n  //     let authorizedView = await api.scQueryApi('/api/common/user-info', 'POST', '');\n  //   }, 60 * 1000);\n\n  //   //this.$router.push('/dc/dashboard');\n  // }\n}\n</script>\n"],"mappings":";OASWA,UAAqC;;;;;;uBAR9CC,YAAA,CAaWC,mBAAA;IAbDC,QAAQ,EAAC,OAAO;IAAEC,UAAU,EAAEC,MAAA,CAAAC,iBAAiB;IAAGC,OAAO,EAAEF,MAAA,CAAAG,cAAc;IAAGC,eAAc,EAAAC,MAAA,QAAAA,MAAA,MAAQC,KAAK,IAAWC,IAAA,CAAAC,MAAM,CAACC,MAAM;;aAAwDH;;;IADnMI,OAAA,EAAAC,QAAA,CAQI,MAGgB,CAHhBC,YAAA,CAGgBC,wBAAA;MAXpBH,OAAA,EAAAC,QAAA,CASM,MAA2GN,MAAA,QAAAA,MAAA,OAA3GS,mBAAA,CAA2G;QAAtGC,GAAqC,EAArCpB,UAAqC;QAACqB,KAAK,EAAC,8BAA8B;QAACC,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC;kCACnGJ,mBAAA,CAAiG;QAA5FC,GAAqC,EADrCpB,UAAqC;QACCqB,KAAK,EAAC,sBAAsB;QAACC,KAAK,EAAC,IAAI;QAACC,MAAM,EAAC;;MAVhGC,CAAA;QAYIP,YAAA,CAAkCQ,wBAAA;MAAZC,GAAG,EAAEC,KAAA,CAAAD;IAAG,kCAC9BT,YAAA,CAA2GW,0BAAA;MAA1FC,EAAE,EAAC,gBAAgB;MAACR,KAAK,EAAC,kBAAkB;MAAES,OAAK,EAAApB,MAAA,QAAAA,MAAA,MAAAqB,MAAA,IAAEnB,IAAA,CAAAC,MAAM,CAACC,MAAM;;IAbvFU,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}